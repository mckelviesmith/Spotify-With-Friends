{"ast":null,"code":"import * as service from '../services/user-service';\nexport const FIND_USER_BY_ID = 'FIND_USER_BY_ID';\nexport const FIND_USER_BY_USERNAME = 'FIND_USER_BY_USERNAME';\nexport const FIND_ALL_USERS = 'FIND_ALL_USERS';\nexport const FIND_USERS_FOLLOWERS = 'FIND_USERS_FOLLOWERS';\nexport const FIND_USERS_FOLLOWING = 'FIND_USERS_FOLLOWING';\nexport const CREATE_USER = 'CREATE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const FOLLOW_USER = 'FOLLOW_USER';\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\nexport const findUserById = async (dispatch, id) => {\n  const user = await service.findUserById(id);\n  dispatch({\n    type: FIND_USER_BY_ID,\n    user\n  });\n};\nexport const findUserByUsername = async dispatch => {\n  const user = await service.findUserByUsername();\n  dispatch({\n    type: FIND_USER_BY_USERNAME,\n    user\n  });\n};\nexport const findAllUsers = async dispatch => {\n  const users = await service.findAllUsers();\n  dispatch({\n    type: FIND_ALL_USERS,\n    users\n  });\n};\nexport const findUsersFollowers = async (dispatch, user) => {\n  const followers = await service.findUsersFollowers(user);\n  dispatch({\n    type: FIND_USERS_FOLLOWERS,\n    followers\n  });\n};\nexport const findUsersFollowing = async (dispatch, user) => {\n  const following = await service.findUsersFollowing(user);\n  dispatch({\n    type: FIND_USERS_FOLLOWERS,\n    following\n  });\n};\nexport const createUser = async (dispatch, user) => {\n  const newUser = await service.createUser(user);\n  dispatch({\n    type: CREATE_USER,\n    newUser\n  });\n};\nexport const deleteUser = async (dispatch, user) => {\n  await service.deleteUser(user);\n  dispatch({\n    type: DELETE_USER,\n    user\n  });\n};","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/user-actions.js"],"names":["service","FIND_USER_BY_ID","FIND_USER_BY_USERNAME","FIND_ALL_USERS","FIND_USERS_FOLLOWERS","FIND_USERS_FOLLOWING","CREATE_USER","UPDATE_USER","DELETE_USER","FOLLOW_USER","UNFOLLOW_USER","findUserById","dispatch","id","user","type","findUserByUsername","findAllUsers","users","findUsersFollowers","followers","findUsersFollowing","following","createUser","newUser","deleteUser"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,0BAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,EAAjB,KAAwB;AAChD,QAAMC,IAAI,GAAG,MAAMd,OAAO,CAACW,YAAR,CAAqBE,EAArB,CAAnB;AACAD,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEd,eADD;AAELa,IAAAA;AAFK,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAME,kBAAkB,GAAG,MAAOJ,QAAP,IAAoB;AAClD,QAAME,IAAI,GAAG,MAAMd,OAAO,CAACgB,kBAAR,EAAnB;AACAJ,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEb,qBADD;AAELY,IAAAA;AAFK,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMG,YAAY,GAAG,MAAOL,QAAP,IAAoB;AAC5C,QAAMM,KAAK,GAAG,MAAMlB,OAAO,CAACiB,YAAR,EAApB;AACAL,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEZ,cADD;AAELe,IAAAA;AAFK,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMC,kBAAkB,GAAG,OAAOP,QAAP,EAAiBE,IAAjB,KAA0B;AACxD,QAAMM,SAAS,GAAG,MAAMpB,OAAO,CAACmB,kBAAR,CAA2BL,IAA3B,CAAxB;AACAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEX,oBADD;AAELgB,IAAAA;AAFK,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMC,kBAAkB,GAAG,OAAOT,QAAP,EAAiBE,IAAjB,KAA0B;AACxD,QAAMQ,SAAS,GAAG,MAAMtB,OAAO,CAACqB,kBAAR,CAA2BP,IAA3B,CAAxB;AACAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEX,oBADD;AAELkB,IAAAA;AAFK,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMC,UAAU,GAAG,OAAOX,QAAP,EAAiBE,IAAjB,KAA0B;AAChD,QAAMU,OAAO,GAAG,MAAMxB,OAAO,CAACuB,UAAR,CAAmBT,IAAnB,CAAtB;AACAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAET,WADD;AAELkB,IAAAA;AAFK,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMC,UAAU,GAAG,OAAOb,QAAP,EAAiBE,IAAjB,KAA0B;AAChD,QAAMd,OAAO,CAACyB,UAAR,CAAmBX,IAAnB,CAAN;AACAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEP,WADD;AAELM,IAAAA;AAFK,GAAD,CAAR;AAIH,CANM","sourcesContent":["import * as service from '../services/user-service';\n\nexport const FIND_USER_BY_ID = 'FIND_USER_BY_ID';\nexport const FIND_USER_BY_USERNAME = 'FIND_USER_BY_USERNAME';\nexport const FIND_ALL_USERS = 'FIND_ALL_USERS';\nexport const FIND_USERS_FOLLOWERS = 'FIND_USERS_FOLLOWERS';\nexport const FIND_USERS_FOLLOWING = 'FIND_USERS_FOLLOWING';\n\nexport const CREATE_USER = 'CREATE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n\nexport const FOLLOW_USER = 'FOLLOW_USER';\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\n\nexport const findUserById = async (dispatch, id) => {\n    const user = await service.findUserById(id);\n    dispatch({\n        type: FIND_USER_BY_ID,\n        user\n    });\n};\n\nexport const findUserByUsername = async (dispatch) => {\n    const user = await service.findUserByUsername();\n    dispatch({\n        type: FIND_USER_BY_USERNAME,\n        user\n    });\n};\n\nexport const findAllUsers = async (dispatch) => {\n    const users = await service.findAllUsers();\n    dispatch({\n        type: FIND_ALL_USERS,\n        users\n    });\n};\n\nexport const findUsersFollowers = async (dispatch, user) => {\n    const followers = await service.findUsersFollowers(user);\n    dispatch({\n        type: FIND_USERS_FOLLOWERS,\n        followers\n    })\n};\n\nexport const findUsersFollowing = async (dispatch, user) => {\n    const following = await service.findUsersFollowing(user);\n    dispatch({\n        type: FIND_USERS_FOLLOWERS,\n        following\n    })\n};\n\nexport const createUser = async (dispatch, user) => {\n    const newUser = await service.createUser(user);\n    dispatch({\n        type: CREATE_USER,\n        newUser\n    });\n};\n\nexport const deleteUser = async (dispatch, user) => {\n    await service.deleteUser(user);\n    dispatch({\n        type: DELETE_USER,\n        user\n    });\n};\n"]},"metadata":{},"sourceType":"module"}