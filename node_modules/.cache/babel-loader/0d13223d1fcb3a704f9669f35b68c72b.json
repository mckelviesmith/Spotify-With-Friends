{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/contexts/profileContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileContext = /*#__PURE__*/React.createContext();\nconst API_URI = process.env.REACT_APP_LOCAL_API_URI || process.env.REACT_APP_REMOTE_API_URI;\nconst api = axios.create({\n  withCredentials: true\n});\nexport const ProfileProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n\n  const register = async user => {\n    const response = await api.post(`${API_URI}/register`, user);\n    setCurrentUser(response.data);\n    return response.data;\n  };\n\n  const login = async (username, password) => {\n    const response = await api.post(`${API_URI}/login`, {\n      username,\n      password\n    });\n    setCurrentUser(response.data);\n  };\n\n  const checkLoggedIn = async () => {\n    try {\n      const response = await api.post(`${API_URI}/profile`);\n      const user = response.data;\n      setCurrentUser(user);\n      return user;\n    } catch (e) {// console.log(`Failed to retrieve current user: ${e}`);\n    }\n  };\n\n  const logout = async () => {\n    await api.post(`${API_URI}/logout`);\n    setCurrentUser(null);\n  };\n\n  const updateCurrentUser = async updatedUser => {\n    try {\n      await api.put(`${API_URI}/profile`, updatedUser);\n      const user = await checkLoggedIn();\n      return user;\n    } catch (e) {\n      console.log(`Update user operation invalid: ${e}`);\n    }\n  };\n\n  const value = {\n    register,\n    login,\n    checkLoggedIn,\n    logout,\n    updateCurrentUser,\n    currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileProvider, \"3LNcL0Zt96OrwtUFf+WwoDUOWLI=\");\n\n_c = ProfileProvider;\nexport const useProfile = () => {\n  _s2();\n\n  return useContext(ProfileContext);\n};\n\n_s2(useProfile, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileProvider\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/contexts/profileContext.js"],"names":["React","useContext","useState","axios","ProfileContext","createContext","API_URI","process","env","REACT_APP_LOCAL_API_URI","REACT_APP_REMOTE_API_URI","api","create","withCredentials","ProfileProvider","children","currentUser","setCurrentUser","register","user","response","post","data","login","username","password","checkLoggedIn","e","logout","updateCurrentUser","updatedUser","put","console","log","value","useProfile"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,IAAuCF,OAAO,CAACC,GAAR,CAAYE,wBAAnE;AACA,MAAMC,GAAG,GAAGR,KAAK,CAACS,MAAN,CAAa;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAb,CAAZ;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,EAA9C;;AAEA,QAAMgB,QAAQ,GAAG,MAAMC,IAAN,IAAc;AAC3B,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAU,GAAEf,OAAQ,WAApB,EAAgCa,IAAhC,CAAvB;AACAF,IAAAA,cAAc,CAACG,QAAQ,CAACE,IAAV,CAAd;AACA,WAAOF,QAAQ,CAACE,IAAhB;AACH,GAJD;;AAMA,QAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxC,UAAML,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAU,GAAEf,OAAQ,QAApB,EAA6B;AAACkB,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAA7B,CAAvB;AACAR,IAAAA,cAAc,CAACG,QAAQ,CAACE,IAAV,CAAd;AACH,GAHD;;AAKA,QAAMI,aAAa,GAAG,YAAY;AAC9B,QAAI;AACA,YAAMN,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAU,GAAEf,OAAQ,UAApB,CAAvB;AACA,YAAMa,IAAI,GAAGC,QAAQ,CAACE,IAAtB;AACAL,MAAAA,cAAc,CAACE,IAAD,CAAd;AACA,aAAOA,IAAP;AACH,KALD,CAKE,OAAOQ,CAAP,EAAU,CACR;AACH;AACJ,GATD;;AAWA,QAAMC,MAAM,GAAG,YAAY;AACvB,UAAMjB,GAAG,CAACU,IAAJ,CAAU,GAAEf,OAAQ,SAApB,CAAN;AACAW,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAHD;;AAKA,QAAMY,iBAAiB,GAAG,MAAMC,WAAN,IAAqB;AAC3C,QAAI;AACA,YAAMnB,GAAG,CAACoB,GAAJ,CAAS,GAAEzB,OAAQ,UAAnB,EAA8BwB,WAA9B,CAAN;AACA,YAAMX,IAAI,GAAG,MAAMO,aAAa,EAAhC;AACA,aAAOP,IAAP;AACH,KAJD,CAIE,OAAOQ,CAAP,EAAU;AACRK,MAAAA,OAAO,CAACC,GAAR,CAAa,kCAAiCN,CAAE,EAAhD;AACH;AACJ,GARD;;AAUA,QAAMO,KAAK,GAAG;AAAChB,IAAAA,QAAD;AAAWK,IAAAA,KAAX;AAAkBG,IAAAA,aAAlB;AAAiCE,IAAAA,MAAjC;AAAyCC,IAAAA,iBAAzC;AAA4Db,IAAAA;AAA5D,GAAd;AAEA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEkB,KAAhC;AAAA,cACKnB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA/CM;;GAAMD,e;;KAAAA,e;AAiDb,OAAO,MAAMqB,UAAU,GAAG,MAAM;AAAA;;AAC5B,SAAOlC,UAAU,CAACG,cAAD,CAAjB;AACH,CAFM;;IAAM+B,U","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\n\nconst ProfileContext = React.createContext();\nconst API_URI = process.env.REACT_APP_LOCAL_API_URI || process.env.REACT_APP_REMOTE_API_URI;\nconst api = axios.create({withCredentials: true});\n\nexport const ProfileProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState();\n\n    const register = async user => {\n        const response = await api.post(`${API_URI}/register`, user);\n        setCurrentUser(response.data);\n        return response.data;\n    }\n\n    const login = async (username, password) => {\n        const response = await api.post(`${API_URI}/login`, {username, password});\n        setCurrentUser(response.data);\n    }\n\n    const checkLoggedIn = async () => {\n        try {\n            const response = await api.post(`${API_URI}/profile`);\n            const user = response.data;\n            setCurrentUser(user);\n            return user;\n        } catch (e) {\n            // console.log(`Failed to retrieve current user: ${e}`);\n        }\n    }\n\n    const logout = async () => {\n        await api.post(`${API_URI}/logout`);\n        setCurrentUser(null);\n    }\n\n    const updateCurrentUser = async updatedUser => {\n        try {\n            await api.put(`${API_URI}/profile`, updatedUser);\n            const user = await checkLoggedIn();\n            return user;\n        } catch (e) {\n            console.log(`Update user operation invalid: ${e}`);\n        }\n    }\n\n    const value = {register, login, checkLoggedIn, logout, updateCurrentUser, currentUser};\n\n    return (\n        <ProfileContext.Provider value={value}>\n            {children}\n        </ProfileContext.Provider>\n    );\n}\n\nexport const useProfile = () => {\n    return useContext(ProfileContext);\n}"]},"metadata":{},"sourceType":"module"}