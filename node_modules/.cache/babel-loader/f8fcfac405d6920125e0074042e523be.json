{"ast":null,"code":"import { FIND_ALL_POSTS, DELETE_POST, CREATE_POST, UPDATE_POST, FIND_POSTS_BY_AUTHOR, FIND_POSTS_BY_SONG } from \"../actions/post-actions\";\n\nconst postsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_POST:\n      return state.map(post => post._id === action.post._id ? action.post : post);\n\n    case CREATE_POST:\n      return [action.newPost, ...state];\n\n    case FIND_ALL_POSTS:\n      return action.posts;\n\n    case FIND_POSTS_BY_SONG:\n      return action.posts;\n\n    case FIND_POSTS_BY_AUTHOR:\n      return action.posts;\n\n    case DELETE_POST:\n      return state.filter(post => post._id !== action.post._id);\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/post-reducer.js"],"names":["FIND_ALL_POSTS","DELETE_POST","CREATE_POST","UPDATE_POST","FIND_POSTS_BY_AUTHOR","FIND_POSTS_BY_SONG","postsReducer","state","action","type","map","post","_id","newPost","posts","filter"],"mappings":"AAAA,SACIA,cADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,oBALJ,EAMIC,kBANJ,QAM8B,yBAN9B;;AAQA,MAAMC,YAAY,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE,aAAOI,KAAK,CAACG,GAAN,CACHC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACG,IAAP,CAAYC,GAAzB,GACJJ,MAAM,CAACG,IADH,GACUA,IAFf,CAAP;;AAGF,SAAKT,WAAL;AACE,aAAO,CACLM,MAAM,CAACK,OADF,EAEL,GAAGN,KAFE,CAAP;;AAIF,SAAKP,cAAL;AACE,aAAOQ,MAAM,CAACM,KAAd;;AACF,SAAKT,kBAAL;AACE,aAAOG,MAAM,CAACM,KAAd;;AACF,SAAKV,oBAAL;AACE,aAAOI,MAAM,CAACM,KAAd;;AACF,SAAKb,WAAL;AACE,aAAOM,KAAK,CAACQ,MAAN,CACHJ,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACG,IAAP,CAAYC,GAD9B,CAAP;;AAEF;AACE,aAAOL,KAAP;AApBJ;AAsBD,CAvBD;;AAwBA,eAAeD,YAAf","sourcesContent":["import {\n    FIND_ALL_POSTS,\n    DELETE_POST,\n    CREATE_POST,\n    UPDATE_POST,\n    FIND_POSTS_BY_AUTHOR,\n    FIND_POSTS_BY_SONG } from \"../actions/post-actions\";\n\nconst postsReducer = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_POST:\n      return state.map(\n          post => post._id === action.post._id ?\n              action.post : post);\n    case CREATE_POST:\n      return [\n        action.newPost,\n        ...state,\n      ];\n    case FIND_ALL_POSTS:\n      return action.posts;\n    case FIND_POSTS_BY_SONG:\n      return action.posts;\n    case FIND_POSTS_BY_AUTHOR:\n      return action.posts;\n    case DELETE_POST:\n      return state.filter(\n          post => post._id !== action.post._id);\n    default:\n      return state;\n  }\n}\nexport default postsReducer;"]},"metadata":{},"sourceType":"module"}