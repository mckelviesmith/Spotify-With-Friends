{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/list-of-post-item.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { deletePost, updatePost } from \"../../actions/post-actions\";\nimport React, { useEffect, useState } from \"react\";\nimport { createComment } from \"../../actions/comment-actions\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport CommentList from \"./Comments\";\nimport * as commentService from \"../../services/comment-service\";\nimport { findSong } from \"../../services/song-service\";\nimport * as userService from \"../../services/user-service\";\nimport timeAgo from \"../../utils/TimeAgoUtil\";\nimport refreshPage from \"../../utils/refreshPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostListItem = _ref => {\n  _s();\n\n  let {\n    post = null,\n    hideImage = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const [newComment, setNewComment] = useState();\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [numComments, setNumComments] = useState(0);\n  const [song, setSong] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState();\n  const [author, setAuthor] = useState(null);\n  const {\n    checkLoggedIn\n  } = useProfile();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const comment = {\n    author: currentUserId,\n    timestamp: 0,\n    text: newComment\n  };\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n\n        if (user) {\n          setIsLoggedIn(true);\n          setCurrentUserId(user._id);\n        }\n      } catch (e) {\n        console.log(`Caught error in user-list-item.js: ${e}`);\n      }\n    };\n\n    const getAuthor = async () => {\n      if (post) {\n        const author = await userService.findUserById(post.author);\n        setAuthor(author);\n      }\n    };\n\n    const findPostsComments = async () => {\n      if (post) {\n        const comments = await commentService.findCommentsInIdList(post.comments);\n        setComments(comments);\n        setNumComments(comments.length);\n      }\n    };\n\n    const getTrack = async () => {\n      if (post && !song) {\n        const track = await findSong(post.song);\n        setSong(track);\n      }\n    };\n\n    const getPostDataObj = async () => {\n      await Promise.all([check(), getAuthor(), findPostsComments(), getTrack()]);\n    };\n\n    getPostDataObj();\n  }, [dispatch]);\n\n  const alertLoginForAction = action => alert(`Please log in or create an account to ${action}!`);\n\n  const handleAddNewCommentOrAlertAnon = async () => {\n    if (isLoggedIn) {\n      const commentToAdd = await createComment(dispatch, comment);\n      await updatePost(dispatch, { ...post,\n        post: post.comments.push(commentToAdd._id)\n      });\n      alert('Adding your comment...');\n      refreshPage();\n    } else {\n      alertLoginForAction('comment');\n    }\n  };\n\n  const toggleDisplayComments = () => {\n    setShowComments(!showComments);\n  };\n\n  if (post && song && author) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `list-group-item bg-secondary mb-2`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-3\",\n        children: [!hideImage && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/songs/details/${song.id}`,\n          className: \"text-decoration-none text-muted\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.album.cover,\n            className: \"card-img-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [!hideImage && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/songs/details/${song.id}`,\n            className: \"text-decoration-none text-muted\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-title mb-0 lead\",\n              children: song.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-subtitle mb-0 lead\",\n              children: song.artists[0].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text fw-bold\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/profile/${author.username}`,\n              className: \"text-decoration-none text-dark\",\n              children: author.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"d-inline fw-normal ps-2\",\n                children: timeAgo(post.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ps-3 pe-3 d-inline-block\",\n            children: [post.likes.includes(currentUserId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-heart text-secondary pe-1\",\n                onClick: () => {\n                  isLoggedIn && updatePost(dispatch, { ...post,\n                    post: post.likes.splice(post.likes.indexOf(currentUserId), 1)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 56\n            }, this), !post.likes.includes(currentUserId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-heart pe-1\",\n                onClick: () => {\n                  isLoggedIn && !post.likes.includes(currentUserId) && updatePost(dispatch, { ...post,\n                    post: post.likes.push(currentUserId)\n                  }) || !isLoggedIn && alertLoginForAction('like posts');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 57\n            }, this), post.likes.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pe-3 d-inline-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `fa${showComments && 's' || 'r'} fa-comment`,\n                onClick: () => toggleDisplayComments()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 50\n            }, this), \" \", numComments]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-3 me-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            value: newComment,\n            placeholder: \"Cool post!\",\n            onChange: event => setNewComment(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"float-end btn btn-primary mt-2 mb-2 float-end\",\n            onClick: () => handleAddNewCommentOrAlertAnon(),\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-0 pe-3 ps-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(CommentList, {\n            comments: comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), isLoggedIn && post.author === currentUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-end\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => deletePost(dispatch, post),\n          role: \"button\",\n          className: \"pt-3 fa fa-trash text-light fa-2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(PostListItem, \"UAbfJU6/I6sZpu3fXEHg/9h3yBU=\", false, function () {\n  return [useDispatch, useProfile];\n});\n\n_c = PostListItem;\nexport default PostListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostListItem\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/list-of-post-item.js"],"names":["useDispatch","deletePost","updatePost","React","useEffect","useState","createComment","useProfile","CommentList","commentService","findSong","userService","timeAgo","refreshPage","PostListItem","post","hideImage","dispatch","newComment","setNewComment","showComments","setShowComments","comments","setComments","numComments","setNumComments","song","setSong","currentUserId","setCurrentUserId","author","setAuthor","checkLoggedIn","isLoggedIn","setIsLoggedIn","comment","timestamp","text","check","user","_id","e","console","log","getAuthor","findUserById","findPostsComments","findCommentsInIdList","length","getTrack","track","getPostDataObj","Promise","all","alertLoginForAction","action","alert","handleAddNewCommentOrAlertAnon","commentToAdd","push","toggleDisplayComments","id","album","cover","name","artists","title","username","likes","includes","splice","indexOf","event","target","value"],"mappings":"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","sourcesContent":["import {useDispatch} from \"react-redux\";\nimport {deletePost, updatePost} from \"../../actions/post-actions\";\nimport React, {useEffect, useState} from \"react\";\nimport {createComment} from \"../../actions/comment-actions\";\nimport {useProfile} from \"../../contexts/profileContext\";\nimport CommentList from \"./Comments\";\nimport * as commentService from \"../../services/comment-service\";\nimport {findSong} from \"../../services/song-service\";\nimport * as userService from \"../../services/user-service\";\nimport timeAgo from \"../../utils/TimeAgoUtil\";\nimport refreshPage from \"../../utils/refreshPage\";\n\nconst PostListItem = ({\n  post = null,\n  hideImage = false,\n}) => {\n  const dispatch = useDispatch();\n  const [newComment, setNewComment] = useState();\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [numComments, setNumComments] = useState(0);\n  const [song, setSong] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState();\n  const [author, setAuthor] = useState(null);\n  const {checkLoggedIn} = useProfile();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const comment = {\n    author: currentUserId,\n    timestamp: 0,\n    text: newComment,\n  };\n\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n        if (user) {\n          setIsLoggedIn(true);\n          setCurrentUserId(user._id);\n        }\n      } catch (e) {\n        console.log(`Caught error in user-list-item.js: ${e}`);\n      }\n    };\n    const getAuthor = async () => {\n        if (post) {\n            const author = await userService.findUserById(post.author);\n            setAuthor(author);\n        }\n    }\n    const findPostsComments = async () => {\n        if (post) {\n            const comments = await commentService.findCommentsInIdList(post.comments);\n            setComments(comments);\n            setNumComments(comments.length);\n        }\n    }\n    const getTrack = async () => {\n        if (post && !song) {\n            const track = await findSong(post.song);\n            setSong(track);\n        }\n    };\n    \n    const getPostDataObj = async () => {\n        await Promise.all([\n            check(),\n            getAuthor(),\n            findPostsComments(),\n            getTrack()\n        ]);\n    }\n    getPostDataObj();\n  }, [dispatch]);\n\n  const alertLoginForAction = action => alert(`Please log in or create an account to ${action}!`);\n\n  const handleAddNewCommentOrAlertAnon = async () => {\n    if (isLoggedIn) {\n      const commentToAdd = await createComment(dispatch, comment);\n      await updatePost(dispatch, {\n        ...post,\n        post: post.comments.push(commentToAdd._id),\n      });\n      alert('Adding your comment...');\n      refreshPage();\n    } else {\n        alertLoginForAction('comment');\n    }\n  };\n\n  const toggleDisplayComments = () => {\n    setShowComments(!showComments);\n  }\n\n  if (post && song && author) {\n    return (\n        <ul className={`list-group-item bg-secondary mb-2`}>\n          <div className=\"card m-3\">\n            {\n                !hideImage && \n                <a href={`/songs/details/${song.id}`}\n                    className='text-decoration-none text-muted'>\n                    <img src={song.album.cover} className=\"card-img-top\"/>\n                </a>\n            }\n            <div className=\"card-body\">\n              {\n                !hideImage &&\n                <a href={`/songs/details/${song.id}`}\n                    className='text-decoration-none text-muted'>\n                  <p className=\"card-title mb-0 lead\">{song.name}</p>\n                  <p className=\"card-subtitle mb-0 lead\">{song.artists[0].name}</p>\n                  <hr/>\n                </a>\n              }\n              <h4>{post.title}</h4>\n              <p className=\"card-text fw-bold\">\n                <a href={`/profile/${author.username}`}\n                    className='text-decoration-none text-dark'>\n                    {author.name}\n                </a>\n                <span><p className=\"d-inline fw-normal ps-2\">{timeAgo(\n                    post.timestamp)}</p></span></p>\n              <p className=\"card-text\">{post.text}</p>\n            </div>\n            <div>\n              <p className=\"ps-3 pe-3 d-inline-block\">\n                {post.likes.includes(currentUserId) && <span role=\"button\"><i\n                    className=\"fas fa-heart text-secondary pe-1\"\n                    onClick={() => {\n                      isLoggedIn && updatePost(dispatch, {\n                        ...post,\n                        post: post.likes.splice(post.likes.indexOf(currentUserId), 1),\n                      })\n                    }}></i>\n                  </span>}\n                {!post.likes.includes(currentUserId) && <span role=\"button\"><i\n                    className=\"far fa-heart pe-1\"\n                    onClick={() => {\n                      (isLoggedIn && !post.likes.includes(currentUserId) &&\n                      updatePost(dispatch, {\n                        ...post,\n                        post: post.likes.push(currentUserId),\n                      })) || (!isLoggedIn && alertLoginForAction('like posts'))}}></i>\n                  </span>}\n                {post.likes.length} </p>\n              <p className=\"pe-3 d-inline-block\"><span role=\"button\"><i\n                  className={`fa${(showComments && 's') || 'r'} fa-comment`} onClick={() => toggleDisplayComments()}></i></span> {numComments}\n              </p>\n            </div>\n            <div className=\"ms-3 me-3\">\n              <textarea className=\"form-control\" value={newComment}\n                        placeholder=\"Cool post!\"\n                        onChange={(event) =>\n                            setNewComment(event.target.value)}>\n              </textarea>\n              <button\n                  className=\"float-end btn btn-primary mt-2 mb-2 float-end\"\n                  onClick={() =>\n                      handleAddNewCommentOrAlertAnon()}>\n                Comment\n              </button>\n            </div>\n            {showComments && <div className=\"mt-0 pe-3 ps-3 mb-3\">\n              <CommentList comments={comments}/>\n            </div>}\n          </div>\n          {isLoggedIn && post.author=== currentUserId && <div className=\"float-end\">\n            <i onClick={() => deletePost(\n                dispatch, post)}\n                role=\"button\"\n               className=\"pt-3 fa fa-trash text-light fa-2x\"/>\n          </div>}\n        </ul>\n    );\n  } else {\n    return null;\n  }\n}\nexport default PostListItem;\n"]},"metadata":{},"sourceType":"module"}