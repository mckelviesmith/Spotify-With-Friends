{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/createPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SecureContent from \"../secureContent\";\nimport { createPost } from \"../../actions/post-actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport { findUsersSongs } from '../../actions/song-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = _ref => {\n  _s();\n\n  let {\n    className = '',\n    specificSong = undefined,\n    canPost = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const usersSongs = useSelector(state => state.songs);\n  const {\n    checkLoggedIn\n  } = useProfile();\n  const [currentUser, setCurrentUser] = useState();\n  const titleRef = useRef();\n  const textRef = useRef();\n  const songRef = useRef();\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n        setCurrentUser(user);\n      } catch (e) {\n        console.log(`Error loading in createPost.js: ${e}`);\n      }\n    };\n\n    check();\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      const getSongs = async () => await findUsersSongs(dispatch, currentUser);\n\n      getSongs();\n    }\n  }, [currentUser]);\n\n  const handleCreate = async e => {\n    e.preventDefault();\n\n    try {\n      if (canPost) {\n        const post = {\n          title: titleRef.current.value,\n          author: currentUser._id,\n          song: specificSong ? specificSong.id : songRef.current.value,\n          text: textRef.current.value\n        };\n        await createPost(dispatch, post);\n        titleRef.current.value = \"\";\n        textRef.current.value = \"\";\n\n        if (songRef.current) {\n          songRef.current.value = \"\";\n        }\n      } else if (specificSong) {\n        alert(`You must save ${specificSong.name} before posting about it`);\n      }\n    } catch (e) {\n      alert(`Unable to create post. Try again`);\n    }\n  };\n\n  if (currentUser) {\n    return /*#__PURE__*/_jsxDEV(SecureContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-light p-2 rounded-1 pb-5 mb-4 ${className}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-2\",\n          children: \"Create a Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-outline mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              ref: titleRef,\n              type: \"text\",\n              id: \"registerName\",\n              className: \"form-control rounded-1\",\n              placeholder: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), !specificSong && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-outline mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              required: true,\n              ref: songRef,\n              className: \"form-select\",\n              defaultValue: 'DEFAULT',\n              children: [usersSongs && usersSongs.length > 0 && /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DEFAULT\",\n                disabled: true,\n                children: \"Select a song to post about\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 45\n              }, this) || /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DEFAULT\",\n                disabled: true,\n                className: \"text-wrap\",\n                children: [\"You have no \", currentUser.creator && 'saved', \" songs to share\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), usersSongs && usersSongs.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: s.id,\n                children: [s.name, \" by \", s.artists[0].name]\n              }, s.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 61\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-outline mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control rounded-1\",\n              ref: textRef,\n              placeholder: \"Text (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mb-2 float-end\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(CreatePost, \"udaRTXQ8cOmIzgcEIU8rPAO5GN8=\", false, function () {\n  return [useDispatch, useSelector, useProfile];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/createPost.js"],"names":["React","useEffect","useRef","useState","SecureContent","createPost","useDispatch","useSelector","useProfile","findUsersSongs","CreatePost","className","specificSong","undefined","canPost","dispatch","usersSongs","state","songs","checkLoggedIn","currentUser","setCurrentUser","titleRef","textRef","songRef","check","user","e","console","log","getSongs","handleCreate","preventDefault","post","title","current","value","author","_id","song","id","text","alert","name","length","creator","map","s","artists"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport SecureContent from \"../secureContent\";\nimport { createPost } from \"../../actions/post-actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport { findUsersSongs } from '../../actions/song-actions';\n\nconst CreatePost = ({className = '',\n                     specificSong = undefined,\n                     canPost = false,\n}) => {\n    const dispatch = useDispatch();\n    const usersSongs = useSelector(state => state.songs);\n    const { checkLoggedIn } = useProfile();\n    const [currentUser, setCurrentUser] = useState();\n    const titleRef = useRef();\n    const textRef = useRef();\n    const songRef = useRef();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n            } catch (e) {\n                console.log(`Error loading in createPost.js: ${e}`);\n            }\n        };\n        check();\n    }, []);\n\n    useEffect(() => {\n        if (currentUser) {\n            const getSongs = async () => await findUsersSongs(dispatch, currentUser);\n            getSongs();\n        }\n    }, [currentUser]);\n\n    const handleCreate = async e => {\n        e.preventDefault();\n\n        try {\n            if (canPost) {\n                const post = {\n                    title: titleRef.current.value,\n                    author: currentUser._id,\n                    song: specificSong ? specificSong.id : songRef.current.value,\n                    text: textRef.current.value,\n                };\n                await createPost(dispatch, post);\n                \n                titleRef.current.value = \"\";\n                textRef.current.value = \"\";\n    \n                if (songRef.current) {\n                    songRef.current.value = \"\";\n                }\n            } else if (specificSong) {\n                alert(`You must save ${specificSong.name} before posting about it`);\n            }\n        } catch (e) {\n            alert(`Unable to create post. Try again`);\n        }\n    };\n\n    if (currentUser) {\n        return (\n            <SecureContent>\n                <div className={`bg-light p-2 rounded-1 pb-5 mb-4 ${className}`}>\n                    <h5 className=\"mb-2\">Create a Post</h5>\n                    <form onSubmit={handleCreate}>    \n                        {/* title */}\n                        <div className=\"form-outline mb-2\">\n                            <input required \n                                    ref={titleRef}\n                                    type=\"text\" id=\"registerName\" \n                                    className=\"form-control rounded-1\"\n                                    placeholder=\"Title\" />\n                        </div>\n                        \n                        {/* song */}\n                        {\n                            !specificSong && \n                            <div className=\"form-outline mb-4\">\n                                <select required\n                                        ref={songRef}\n                                        className=\"form-select\"\n                                        defaultValue={'DEFAULT'}>\n                                    {\n                                        (\n                                            usersSongs && usersSongs.length > 0 &&\n                                            <option value='DEFAULT' disabled>Select a song to post about</option>\n                                        ) ||\n                                        <option value='DEFAULT' disabled className=\"text-wrap\">\n                                            You have no {currentUser.creator && 'saved'} songs to share\n                                        </option>\n                                    }\n                                    {\n                                        usersSongs &&\n                                        usersSongs.map(s => <option key={s.id} value={s.id}>{s.name} by {s.artists[0].name}</option>)\n                                    }\n                                </select>\n                            </div>\n                        }\n    \n                        {/* text */}\n                        <div className=\"form-outline mb-2\">\n                            <textarea className=\"form-control rounded-1\" \n                                        ref={textRef} \n                                        placeholder=\"Text (optional)\">\n                            </textarea>\n                        </div>\n    \n                        <button className=\"btn btn-primary mb-2 float-end\">\n                            Post\n                        </button>\n                    </form>\n                </div>\n            </SecureContent>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}