{"ast":null,"code":"import { FIND_ALL_COMMENTS, DELETE_COMMENT, CREATE_COMMENT, UPDATE_COMMENT, FIND_COMMENTS_IN_IDLIST } from \"../actions/comment-actions\";\n\nconst commentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_COMMENT:\n      return state.map(comment => comment._id === action.comment._id ? action.comment : comment);\n\n    case CREATE_COMMENT:\n      return [action.newComment, ...state];\n\n    case FIND_ALL_COMMENTS:\n      return action.comments;\n\n    case DELETE_COMMENT:\n      return state.filter(comment => comment._id !== action.comment._id);\n\n    default:\n      return state;\n  }\n};\n\nexport default commentsReducer;","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/comment-reducer.js"],"names":["FIND_ALL_COMMENTS","DELETE_COMMENT","CREATE_COMMENT","UPDATE_COMMENT","FIND_COMMENTS_IN_IDLIST","commentsReducer","state","action","type","map","comment","_id","newComment","comments","filter"],"mappings":"AAAA,SACEA,iBADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,uBALF,QAOO,4BAPP;;AASA,MAAMC,eAAe,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,cAAL;AACE,aAAOG,KAAK,CAACG,GAAN,CACHC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBJ,MAAM,CAACG,OAAP,CAAeC,GAA/B,GACPJ,MAAM,CAACG,OADA,GACUA,OAFlB,CAAP;;AAGF,SAAKR,cAAL;AACE,aAAO,CACLK,MAAM,CAACK,UADF,EAEL,GAAGN,KAFE,CAAP;;AAIF,SAAKN,iBAAL;AACE,aAAOO,MAAM,CAACM,QAAd;;AACF,SAAKZ,cAAL;AACE,aAAOK,KAAK,CAACQ,MAAN,CACHJ,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBJ,MAAM,CAACG,OAAP,CAAeC,GADvC,CAAP;;AAEF;AACE,aAAOL,KAAP;AAhBJ;AAkBD,CAnBD;;AAoBA,eAAeD,eAAf","sourcesContent":["import {\n  FIND_ALL_COMMENTS,\n  DELETE_COMMENT,\n  CREATE_COMMENT,\n  UPDATE_COMMENT,\n  FIND_COMMENTS_IN_IDLIST\n}\n  from \"../actions/comment-actions\";\n\nconst commentsReducer = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_COMMENT:\n      return state.map(\n          comment => comment._id === action.comment._id ?\n              action.comment : comment);\n    case CREATE_COMMENT:\n      return [\n        action.newComment,\n        ...state\n      ];\n    case FIND_ALL_COMMENTS:\n      return action.comments;\n    case DELETE_COMMENT:\n      return state.filter(\n          comment => comment._id !== action.comment._id);\n    default:\n      return state;\n  }\n}\nexport default commentsReducer;"]},"metadata":{},"sourceType":"module"}