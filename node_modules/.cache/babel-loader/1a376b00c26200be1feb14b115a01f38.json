{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/Comments/comment-list-item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as userService from \"../../../services/user-service\";\nimport { deleteComment } from \"../../../actions/comment-actions\";\nimport timeAgo from \"../../../utils/TimeAgoUtil\";\nimport { useDispatch } from \"react-redux\";\nimport { useProfile } from \"../../../contexts/profileContext\";\nimport refreshPage from \"../../../utils/refreshPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListOfCommentsItem = _ref => {\n  _s();\n\n  let {\n    comment = {\n      _id: '00',\n      author: \"bill\",\n      timestamp: 1650033618075,\n      text: \"comment\"\n    }\n  } = _ref;\n  const dispatch = useDispatch();\n  const [author, setAuthor] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState();\n  const {\n    checkLoggedIn\n  } = useProfile();\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n\n        if (user) {\n          setCurrentUserId(user._id);\n        }\n      } catch (e) {\n        console.log(`Caught error in user-list-item.js: ${e}`);\n      }\n    };\n\n    check();\n  }, []);\n\n  const getAuthor = async () => {\n    const author = await userService.findUserById(comment.author);\n    setAuthor(author);\n  };\n\n  useEffect(getAuthor, []);\n\n  const deleteItem = async () => {\n    deleteComment(dispatch, comment);\n    alert('Removing your comment...');\n    refreshPage();\n  };\n\n  if (author) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group-item w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center w-100 justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"fw-bold pe-3 mb-0\",\n            children: [author.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-inline fw-normal ps-2\",\n              children: timeAgo(comment.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), currentUserId && comment.author === currentUserId && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-remove text-warning\",\n            role: \"button\",\n            onClick: deleteItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_s(ListOfCommentsItem, \"LU6BDAakV0IC/GunIRMBcQtMMHk=\", false, function () {\n  return [useDispatch, useProfile];\n});\n\n_c = ListOfCommentsItem;\nexport default ListOfCommentsItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfCommentsItem\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/Comments/comment-list-item.js"],"names":["React","useEffect","useState","userService","deleteComment","timeAgo","useDispatch","useProfile","refreshPage","ListOfCommentsItem","comment","_id","author","timestamp","text","dispatch","setAuthor","currentUserId","setCurrentUserId","checkLoggedIn","check","user","e","console","log","getAuthor","findUserById","deleteItem","alert","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,KAAKC,WAAZ,MAA6B,gCAA7B;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,kBAAkB,GAAG,QAOrB;AAAA;;AAAA,MAPsB;AAC1BC,IAAAA,OAAO,GAAG;AACRC,MAAAA,GAAG,EAAE,IADG;AAERC,MAAAA,MAAM,EAAE,MAFA;AAGRC,MAAAA,SAAS,EAAE,aAHH;AAIRC,MAAAA,IAAI,EAAE;AAJE;AADgB,GAOtB;AACF,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACM,MAAD,EAASI,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,EAAlD;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAoBZ,UAAU,EAApC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,KAAK,GAAG,YAAY;AACxB,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMF,aAAa,EAAhC;;AACA,YAAIE,IAAJ,EAAU;AACRH,UAAAA,gBAAgB,CAACG,IAAI,CAACV,GAAN,CAAhB;AACD;AACF,OALD,CAKE,OAAOW,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCF,CAAE,EAApD;AACD;AACF,KATD;;AAUAF,IAAAA,KAAK;AACR,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMK,SAAS,GAAG,YAAY;AAC1B,UAAMb,MAAM,GAAG,MAAMT,WAAW,CAACuB,YAAZ,CAAyBhB,OAAO,CAACE,MAAjC,CAArB;AACAI,IAAAA,SAAS,CAACJ,MAAD,CAAT;AACH,GAHD;;AAIAX,EAAAA,SAAS,CAACwB,SAAD,EAAY,EAAZ,CAAT;;AAEA,QAAME,UAAU,GAAG,YAAY;AAC3BvB,IAAAA,aAAa,CAACW,QAAD,EAAWL,OAAX,CAAb;AACAkB,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACApB,IAAAA,WAAW;AACd,GAJD;;AAMA,MAAII,MAAJ,EAAY;AACR,wBACI;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,yDAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA,uBACKA,MAAM,CAACiB,IADZ,eAEI;AAAM,cAAA,SAAS,EAAC,yBAAhB;AAAA,wBAA2CxB,OAAO,CAACK,OAAO,CAACG,SAAT;AAAlD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMQI,aAAa,IAAIP,OAAO,CAACE,MAAR,KAAmBK,aAApC,iBACA;AAAG,YAAA,SAAS,EAAC,2BAAb;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,OAAO,EAAEU;AAFb;AAAA;AAAA;AAAA;AAAA,kBAPR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBjB,OAAO,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AAED,SAAO,IAAP;AACH,CA/DD;;GAAML,kB;UAQeH,W,EAGSC,U;;;KAXxBE,kB;AAiEN,eAAeA,kBAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport * as userService from \"../../../services/user-service\";\nimport { deleteComment } from \"../../../actions/comment-actions\";\nimport timeAgo from \"../../../utils/TimeAgoUtil\";\nimport { useDispatch } from \"react-redux\";\nimport { useProfile } from \"../../../contexts/profileContext\";\nimport refreshPage from \"../../../utils/refreshPage\";\n\nconst ListOfCommentsItem = ({\n  comment = {\n    _id: '00',\n    author: \"bill\",\n    timestamp: 1650033618075,\n    text: \"comment\",\n  }\n}) => {\n    const dispatch = useDispatch();\n    const [author, setAuthor] = useState(null);\n    const [currentUserId, setCurrentUserId] = useState();\n    const { checkLoggedIn } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n          try {\n            const user = await checkLoggedIn();\n            if (user) {\n              setCurrentUserId(user._id);\n            }\n          } catch (e) {\n            console.log(`Caught error in user-list-item.js: ${e}`);\n          }\n        };\n        check();\n    }, []);\n\n    const getAuthor = async () => {\n        const author = await userService.findUserById(comment.author);\n        setAuthor(author);\n    }\n    useEffect(getAuthor, []);\n\n    const deleteItem = async () => {\n        deleteComment(dispatch, comment);\n        alert('Removing your comment...');\n        refreshPage();\n    };\n\n    if (author) {\n        return (\n            <ul className=\"list-group-item w-100\">\n                <div className=\"d-inline-block w-100\">\n                    <div className=\"d-flex align-items-center w-100 justify-content-between\">\n                        <p className=\"fw-bold pe-3 mb-0\">\n                            {author.name}\n                            <span className=\"d-inline fw-normal ps-2\">{timeAgo(comment.timestamp)}</span>\n                        </p>\n                        {\n                            currentUserId && comment.author === currentUserId &&\n                            <i className=\"fa fa-remove text-warning\"\n                                role=\"button\"\n                                onClick={deleteItem}>\n                            </i>\n                        }\n                    </div>\n                    <p className=\"mt-2\">{comment.text}</p>\n                </div>\n            </ul>\n        );\n    }\n\n    return null;\n}\n\nexport default ListOfCommentsItem;"]},"metadata":{},"sourceType":"module"}