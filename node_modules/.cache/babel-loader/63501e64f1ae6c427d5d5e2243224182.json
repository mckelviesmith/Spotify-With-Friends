{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongDetails/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { findSong } from \"../../services/song-service\";\nimport Loading from \"../Loading\";\nimport SaveSongButton from \"./saveSongButton\";\nimport PostList from \"../Posts\";\nimport CreatePost from \"../Posts/createPost\";\nimport { findPostsBySong } from \"../../actions/post-actions\";\nimport { findUsersSongs } from \"../../actions/song-actions\";\nimport toMinutesSeconds from \"../../utils/toMinutesSeconds\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport './style.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SongDetails = () => {\n  _s();\n\n  const {\n    songId\n  } = useParams();\n  const dispatch = useDispatch();\n  const usersSongs = useSelector(state => state.songs);\n  const songsPosts = useSelector(state => state.posts);\n  const songSaved = useSelector(state => state.songSaved);\n  const [song, setSong] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const {\n    checkLoggedIn\n  } = useProfile();\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n\n        const setLoggedInInfo = async () => {\n          await Promise.all([setIsLoggedIn(true), findUsersSongs(dispatch, user)]);\n        };\n\n        setLoggedInInfo();\n      } catch (e) {\n        console.log(`Error loading SongDetails page: ${e}`);\n      }\n    };\n\n    const getTrack = async () => {\n      if (!song) {\n        const track = await findSong(songId);\n        setSong(track);\n      }\n    };\n\n    const loadPage = async () => {\n      await Promise.all([check(), getTrack(), findPostsBySong(dispatch, songId)]);\n    };\n\n    loadPage();\n  }, [dispatch]);\n\n  if (song && usersSongs) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row m-0 mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6 p-0 rounded-top-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row m-0 justify-content-center img-height bg-light-yellow p-3 pe-lg-5 rounded-top-left\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.album.cover,\n              className: \"p-0 rounded h-auto w-auto fit-image shadow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-light-yellow ps-5 p-3 pt-0 pt-md-3 position-relative d-block d-md-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: song.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), song.explicit && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"h4 text-danger fw-bold\",\n                children: \" (explicit)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-muted mb-2\",\n              children: [\"by \", song.artists.map(a => a.name).join(', '), \" (\", song.album.released.substring(0, 4), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"border-2 border-top border-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-muted\",\n              children: [\"Album: \", song.album.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-muted\",\n              children: [\"Duration: \", toMinutesSeconds(song.length_ms)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SaveSongButton, {\n              songId: songId,\n              className: \"position-absolute end-0 bottom-0 m-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CreatePost, {\n            className: \"mt-4 me-3 me-lg-5\",\n            specificSong: song,\n            canPost: songSaved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6 p-0 overflow-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-height bg-light-yellow ps-3 ps-lg-5 rounded-top-right p-3 position-relative d-none d-md-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: song.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), song.explicit && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"h4 text-danger fw-bold\",\n                children: \" (explicit)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-muted mb-2\",\n              children: [\"by \", song.artists.map(a => a.name).join(', '), \" (\", song.album.released.substring(0, 4), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"border-2 border-top border-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-muted\",\n              children: [\"Album: \", song.album.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-muted\",\n              children: [\"Duration: \", toMinutesSeconds(song.length_ms)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SaveSongButton, {\n              songId: songId,\n              className: \"position-absolute end-0 bottom-0 me-3 mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ms-3 ms-lg-5 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"my-2 my-md-3\",\n              children: \"Latest Discussions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), songsPosts.length > 0 && /*#__PURE__*/_jsxDEV(PostList, {\n              posts: songsPosts,\n              hideImages: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this) || isLoggedIn && `Be the first to post about ${song.name}!` || `There are no posts about ${song.name}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(SongDetails, \"LgFaB7/mS5YxNmETWtUZuLMWGYc=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector, useProfile];\n});\n\n_c = SongDetails;\nexport default SongDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongDetails\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongDetails/index.js"],"names":["React","useEffect","useState","useParams","findSong","Loading","SaveSongButton","PostList","CreatePost","findPostsBySong","findUsersSongs","toMinutesSeconds","useProfile","useDispatch","useSelector","SongDetails","songId","dispatch","usersSongs","state","songs","songsPosts","posts","songSaved","song","setSong","isLoggedIn","setIsLoggedIn","checkLoggedIn","check","user","setLoggedInInfo","Promise","all","e","console","log","getTrack","track","loadPage","album","cover","name","explicit","artists","map","a","join","released","substring","length_ms","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAO,aAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAab,SAAS,EAA5B;AACA,QAAMc,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,UAAU,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA9B;AACA,QAAMC,UAAU,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACG,KAAhB,CAA9B;AACA,QAAMC,SAAS,GAAGT,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACI,SAAhB,CAA7B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAE0B,IAAAA;AAAF,MAAoBhB,UAAU,EAApC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4B,KAAK,GAAG,YAAY;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAMF,aAAa,EAAhC;;AACA,cAAMG,eAAe,GAAG,YAAY;AAChC,gBAAMC,OAAO,CAACC,GAAR,CAAY,CACdN,aAAa,CAAC,IAAD,CADC,EAEdjB,cAAc,CAACO,QAAD,EAAWa,IAAX,CAFA,CAAZ,CAAN;AAIH,SALD;;AAMAC,QAAAA,eAAe;AAClB,OATD,CASE,OAAOG,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAa,mCAAkCF,CAAE,EAAjD;AACH;AACJ,KAbD;;AAcA,UAAMG,QAAQ,GAAG,YAAY;AACzB,UAAI,CAACb,IAAL,EAAW;AACP,cAAMc,KAAK,GAAG,MAAMlC,QAAQ,CAACY,MAAD,CAA5B;AACAS,QAAAA,OAAO,CAACa,KAAD,CAAP;AACH;AACJ,KALD;;AAOA,UAAMC,QAAQ,GAAG,YAAY;AACzB,YAAMP,OAAO,CAACC,GAAR,CAAY,CACdJ,KAAK,EADS,EAEdQ,QAAQ,EAFM,EAGd5B,eAAe,CAACQ,QAAD,EAAWD,MAAX,CAHD,CAAZ,CAAN;AAKH,KAND;;AAOAuB,IAAAA,QAAQ;AACX,GA9BQ,EA8BN,CAACtB,QAAD,CA9BM,CAAT;;AAgCA,MAAIO,IAAI,IAAIN,UAAZ,EAAwB;AACpB,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,wFAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEM,IAAI,CAACgB,KAAL,CAAWC,KAArB;AAA4B,cAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,2EAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA,sCACI;AAAA,0BAASjB,IAAI,CAACkB;AAAd;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKlB,IAAI,CAACmB,QAAL,iBAAiB;AAAM,gBAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,gCACQnB,IAAI,CAACoB,OAAL,CAAaC,GAAb,CAAiBC,CAAC,IAAIA,CAAC,CAACJ,IAAxB,EAA8BK,IAA9B,CAAmC,IAAnC,CADR,QACoDvB,IAAI,CAACgB,KAAL,CAAWQ,QAAX,CAAoBC,SAApB,CAA8B,CAA9B,EAAgC,CAAhC,CADpD;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAQI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,oCAAmCzB,IAAI,CAACgB,KAAL,CAAWE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,uCAAsC/B,gBAAgB,CAACa,IAAI,CAAC0B,SAAN,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAWI,QAAC,cAAD;AAAgB,cAAA,MAAM,EAAElC,MAAxB;AAAgC,cAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAiBI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,mBAAtB;AACY,YAAA,YAAY,EAAEQ,IAD1B;AACgC,YAAA,OAAO,EAAED;AADzC;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqBI;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,mGAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA,sCACI;AAAA,0BAASC,IAAI,CAACkB;AAAd;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKlB,IAAI,CAACmB,QAAL,iBAAiB;AAAM,gBAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,gCACQnB,IAAI,CAACoB,OAAL,CAAaC,GAAb,CAAiBC,CAAC,IAAIA,CAAC,CAACJ,IAAxB,EAA8BK,IAA9B,CAAmC,IAAnC,CADR,QACoDvB,IAAI,CAACgB,KAAL,CAAWQ,QAAX,CAAoBC,SAApB,CAA8B,CAA9B,EAAgC,CAAhC,CADpD;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAQI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,oCAAmCzB,IAAI,CAACgB,KAAL,CAAWE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,uCAAsC/B,gBAAgB,CAACa,IAAI,CAAC0B,SAAN,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAWI,QAAC,cAAD;AAAgB,cAAA,MAAM,EAAElC,MAAxB;AAAgC,cAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAIYK,UAAU,CAAC8B,MAAX,GAAoB,CAApB,iBACA,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE9B,UAAjB;AAA6B,cAAA,UAAU,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAFJ,IAKKK,UAAU,IAAK,8BAA6BF,IAAI,CAACkB,IAAK,GAAvD,IACC,4BAA2BlB,IAAI,CAACkB,IAAK,EATlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAsDH,GAvDD,MAuDO;AACH,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CApGD;;GAAM3B,W;UACiBZ,S,EACFU,W,EACEC,W,EACAA,W,EACDA,W,EAGQF,U;;;KARxBG,W;AAsGN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { findSong } from \"../../services/song-service\";\nimport Loading from \"../Loading\";\nimport SaveSongButton from \"./saveSongButton\";\nimport PostList from \"../Posts\";\nimport CreatePost from \"../Posts/createPost\";\nimport { findPostsBySong } from \"../../actions/post-actions\";\nimport { findUsersSongs } from \"../../actions/song-actions\";\nimport toMinutesSeconds from \"../../utils/toMinutesSeconds\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport './style.css';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst SongDetails = () => {\n    const { songId } = useParams();\n    const dispatch = useDispatch();\n    const usersSongs = useSelector(state => state.songs);\n    const songsPosts = useSelector(state => state.posts);\n    const songSaved = useSelector(state => state.songSaved);\n    const [song, setSong] = useState(null);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const { checkLoggedIn } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                const setLoggedInInfo = async () => {\n                    await Promise.all([\n                        setIsLoggedIn(true),\n                        findUsersSongs(dispatch, user),\n                    ]);\n                };\n                setLoggedInInfo();\n            } catch (e) {\n                console.log(`Error loading SongDetails page: ${e}`);\n            }\n        };\n        const getTrack = async () => {\n            if (!song) {\n                const track = await findSong(songId);\n                setSong(track);\n            }\n        };\n\n        const loadPage = async () => {\n            await Promise.all([\n                check(),\n                getTrack(),\n                findPostsBySong(dispatch, songId)\n            ]);\n        };\n        loadPage();\n    }, [dispatch]);\n\n    if (song && usersSongs) {\n        return (\n            <>\n                <div className=\"row m-0 mt-3\">\n                    <div className=\"col-12 col-md-6 p-0 rounded-top-left\">\n                        <div className=\"row m-0 justify-content-center img-height bg-light-yellow p-3 pe-lg-5 rounded-top-left\">\n                            <img src={song.album.cover} className=\"p-0 rounded h-auto w-auto fit-image shadow\"/>\n                        </div>\n                        <div className=\"bg-light-yellow ps-5 p-3 pt-0 pt-md-3 position-relative d-block d-md-none\">\n                            <h1 className=\"text-primary\">\n                                <strong>{song.name}</strong>\n                                {song.explicit && <span className=\"h4 text-danger fw-bold\"> (explicit)</span>}\n                            </h1>\n                            <h4 className=\"text-muted mb-2\">\n                                by {song.artists.map(a => a.name).join(', ')} ({song.album.released.substring(0,4)})\n                            </h4>\n                            <hr className='border-2 border-top border-dark' />\n                            <h5 className=\"text-muted\">Album: {song.album.name}</h5>\n                            <h5 className=\"text-muted\">Duration: {toMinutesSeconds(song.length_ms)}</h5>\n                            <SaveSongButton songId={songId} className=\"position-absolute end-0 bottom-0 m-3\" />\n                        </div>\n                        <CreatePost className=\"mt-4 me-3 me-lg-5\"\n                                    specificSong={song} canPost={songSaved} /> \n                    </div>\n                    <div className=\"col-12 col-md-6 p-0 overflow-auto\">\n                        <div className=\"img-height bg-light-yellow ps-3 ps-lg-5 rounded-top-right p-3 position-relative d-none d-md-block\">\n                            <h1 className=\"text-primary\">\n                                <strong>{song.name}</strong> \n                                {song.explicit && <span className=\"h4 text-danger fw-bold\"> (explicit)</span>}\n                            </h1>\n                            <h4 className=\"text-muted mb-2\">\n                                by {song.artists.map(a => a.name).join(', ')} ({song.album.released.substring(0,4)})\n                            </h4>\n                            <hr className='border-2 border-top border-dark' />\n                            <h5 className=\"text-muted\">Album: {song.album.name}</h5>\n                            <h5 className=\"text-muted\">Duration: {toMinutesSeconds(song.length_ms)}</h5>\n                            <SaveSongButton songId={songId} className=\"position-absolute end-0 bottom-0 me-3 mb-3\" />\n                        </div>\n                        <div className=\"ms-3 ms-lg-5 mb-1\">\n                            <h4 className=\"my-2 my-md-3\">Latest Discussions</h4>\n                            {\n                                (\n                                    songsPosts.length > 0 &&\n                                    <PostList posts={songsPosts} hideImages={true} />\n                                ) || \n                                (\n                                    (isLoggedIn && `Be the first to post about ${song.name}!`) ||\n                                    `There are no posts about ${song.name}`\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return <Loading />\n    }\n}\n\nexport default SongDetails;"]},"metadata":{},"sourceType":"module"}