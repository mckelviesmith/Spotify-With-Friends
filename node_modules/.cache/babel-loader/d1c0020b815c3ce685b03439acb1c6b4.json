{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongList/SongListItem.js\";\nimport './style.css';\nimport toMinutesSeconds from \"../../utils/toMinutesSeconds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongListItem = _ref => {\n  let {\n    number = 0,\n    song = {\n      id: '',\n      name: '',\n      artists: [],\n      length_ms: 0,\n      album: {}\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row w-auto align-items-center\",\n    children: [number > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-1 pe-1\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"fw-bold text-secondary\",\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.album.cover,\n        alt: \"\",\n        className: \"w-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row w-100 text-wrap text-dark pe-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"nobr\", {\n          className: \"text-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold-song-name\",\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted d-none d-md-inline\",\n            children: [\" (\", toMinutesSeconds(song.length_ms), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), song.explicit && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-secondary\",\n            children: \" (explicit)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"nobr\", {\n          className: \"text-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-success\",\n            children: [song.artists[0].name, \"\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: [\"\\xA0\", song.album.released.substring(0, 4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SongListItem;\nexport default SongListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongListItem\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongList/SongListItem.js"],"names":["toMinutesSeconds","SongListItem","number","song","id","name","artists","length_ms","album","cover","explicit","released","substring"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,gBAAP,MAA6B,8BAA7B;;;AAEA,MAAMC,YAAY,GAAG,QAOU;AAAA,MAPT;AAACC,IAAAA,MAAM,GAAG,CAAV;AACEC,IAAAA,IAAI,GAAG;AACHC,MAAAA,EAAE,EAAE,EADD;AAEHC,MAAAA,IAAI,EAAE,EAFH;AAGHC,MAAAA,OAAO,EAAE,EAHN;AAIHC,MAAAA,SAAS,EAAE,CAJR;AAKHC,MAAAA,KAAK,EAAE;AALJ;AADT,GAOS;AAC3B,sBACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,eAEQN,MAAM,GAAG,CAAT,iBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,kBAAwCA;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR,eAOI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEC,IAAI,CAACK,KAAL,CAAWC,KAArB;AAA4B,QAAA,GAAG,EAAC,EAAhC;AACI,QAAA,SAAS,EAAC;AADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAWI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA,gCACQ;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,gBAAhB;AAAA,sBAAkCN,IAAI,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,+BAAhB;AAAA,6BAAmDL,gBAAgB,CAACG,IAAI,CAACI,SAAN,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKJ,IAAI,CAACO,QAAL,iBAAiB;AAAM,YAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAMQ;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,uBAAgCP,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBD,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,+BAAoCF,IAAI,CAACK,KAAL,CAAWG,QAAX,CAAoBC,SAApB,CAA8B,CAA9B,EAAgC,CAAhC,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAnCD;;KAAMX,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import './style.css';\nimport toMinutesSeconds from \"../../utils/toMinutesSeconds\";\n\nconst SongListItem = ({number = 0, \n                        song = {\n                            id: '',\n                            name: '',\n                            artists: [],\n                            length_ms: 0,\n                            album: {},\n                        }}) => {\n    return (\n        <div className='row w-auto align-items-center'>\n            {\n                number > 0 &&\n                <div className='col-1 pe-1'>\n                    <h5 className='fw-bold text-secondary'>{number}</h5>\n                </div>\n            }\n            <div className='col-3'>\n                <img src={song.album.cover} alt=''\n                    className='w-100'></img>\n            </div>\n            <div className='col-8'>\n                <div className='row w-100 text-wrap text-dark pe-1'>\n                        <nobr className='text-wrap'>\n                            <span className=\"bold-song-name\">{song.name}</span> \n                            <span className=\"text-muted d-none d-md-inline\"> ({toMinutesSeconds(song.length_ms)})</span>\n                            {song.explicit && <span className='text-secondary'> (explicit)</span>}\n                        </nobr>\n                        <nobr className='text-wrap'>\n                            <span className='text-success'>{song.artists[0].name}&nbsp;</span>\n                            <span className=\"text-muted\">&nbsp;{song.album.released.substring(0,4)}</span>\n                        </nobr>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SongListItem;"]},"metadata":{},"sourceType":"module"}