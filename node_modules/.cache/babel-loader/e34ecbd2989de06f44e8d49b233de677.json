{"ast":null,"code":"import axios from 'axios';\nconst API_URI = process.env.REACT_APP_LOCAL_API_URI || process.env.REACT_APP_REMOTE_API_URI;\nconst POSTS_API = `${API_URI}/posts`;\nexport const findAllPosts = async () => {\n  const response = await axios.get(POSTS_API);\n  const posts = response.data;\n  return posts;\n};\nexport const findPost = async post => {\n  const response = await axios.get(`${POSTS_API}/${post._id}`);\n  return response.data;\n};\nexport const findPostsByAuthor = async authorId => {\n  const response = await axios.get(`${POSTS_API}/author/id/${authorId}`);\n  return response.data;\n};\nexport const findPostsByAuthorsList = async ids => {\n  const response = await axios.post(`${POSTS_API}/author/list`, {\n    authors: ids\n  });\n  return response.data;\n};\nexport const findPostsBySong = async songId => {\n  const response = await axios.get(`${POSTS_API}/song/id/${songId}`);\n  return response.data;\n};\nexport const findPostsBySongsList = async ids => {\n  const response = await axios.post(`${POSTS_API}/song/list`, {\n    songs: ids\n  });\n  return response.data;\n};\nexport const findPopularSongs = async () => {\n  const response = await axios.get(`${POSTS_API}/song/popular`);\n  return response.data;\n};\nexport const createPost = async post => {\n  const response = await axios.post(POSTS_API, post);\n  return response.data;\n};\nexport const deletePost = async post => {\n  const response = await axios.delete(`${POSTS_API}/${post._id}`);\n  return response.data;\n};\nexport const updatePost = async post => {\n  const response = await axios.put(`${POSTS_API}/${post._id}`, post);\n  return response.data;\n};","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/post-service.js"],"names":["axios","API_URI","process","env","REACT_APP_LOCAL_API_URI","REACT_APP_REMOTE_API_URI","POSTS_API","findAllPosts","response","get","posts","data","findPost","post","_id","findPostsByAuthor","authorId","findPostsByAuthorsList","ids","authors","findPostsBySong","songId","findPostsBySongsList","songs","findPopularSongs","createPost","deletePost","delete","updatePost","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,IAAuCF,OAAO,CAACC,GAAR,CAAYE,wBAAnE;AACA,MAAMC,SAAS,GAAI,GAAEL,OAAQ,QAA7B;AAEA,OAAO,MAAMM,YAAY,GAAG,YAAY;AACtC,QAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUH,SAAV,CAAvB;AACA,QAAMI,KAAK,GAAGF,QAAQ,CAACG,IAAvB;AACA,SAAOD,KAAP;AACD,CAJM;AAMP,OAAO,MAAME,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AACtC,QAAML,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,SAAU,IAAGO,IAAI,CAACC,GAAI,EAAnC,CAAvB;AACA,SAAON,QAAQ,CAACG,IAAhB;AACD,CAHM;AAKP,OAAO,MAAMI,iBAAiB,GAAG,MAAMC,QAAN,IAAkB;AAC/C,QAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,SAAU,cAAaU,QAAS,EAA7C,CAAvB;AACA,SAAOR,QAAQ,CAACG,IAAhB;AACH,CAHM;AAKP,OAAO,MAAMM,sBAAsB,GAAG,MAAMC,GAAN,IAAa;AAC/C,QAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAN,CAAY,GAAEP,SAAU,cAAxB,EAAuC;AAACa,IAAAA,OAAO,EAAED;AAAV,GAAvC,CAAvB;AACA,SAAOV,QAAQ,CAACG,IAAhB;AACH,CAHM;AAKP,OAAO,MAAMS,eAAe,GAAG,MAAMC,MAAN,IAAgB;AAC3C,QAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,SAAU,YAAWe,MAAO,EAAzC,CAAvB;AACA,SAAOb,QAAQ,CAACG,IAAhB;AACH,CAHM;AAKP,OAAO,MAAMW,oBAAoB,GAAG,MAAMJ,GAAN,IAAa;AAC7C,QAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAN,CAAY,GAAEP,SAAU,YAAxB,EAAqC;AAACiB,IAAAA,KAAK,EAAEL;AAAR,GAArC,CAAvB;AACA,SAAOV,QAAQ,CAACG,IAAhB;AACH,CAHM;AAKP,OAAO,MAAMa,gBAAgB,GAAG,YAAY;AACxC,QAAMhB,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,SAAU,eAAvB,CAAvB;AACA,SAAOE,QAAQ,CAACG,IAAhB;AACH,CAHM;AAKP,OAAO,MAAMc,UAAU,GAAG,MAAOZ,IAAP,IAAgB;AACxC,QAAML,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAN,CAAWP,SAAX,EAAsBO,IAAtB,CAAvB;AACA,SAAOL,QAAQ,CAACG,IAAhB;AACD,CAHM;AAKP,OAAO,MAAMe,UAAU,GAAG,MAAOb,IAAP,IAAgB;AACxC,QAAML,QAAQ,GAAG,MAAMR,KAAK,CAAC2B,MAAN,CAAc,GAAErB,SAAU,IAAGO,IAAI,CAACC,GAAI,EAAtC,CAAvB;AACA,SAAON,QAAQ,CAACG,IAAhB;AACD,CAHM;AAKP,OAAO,MAAMiB,UAAU,GAAG,MAAOf,IAAP,IAAgB;AACxC,QAAML,QAAQ,GAAG,MAAMR,KAAK,CAC3B6B,GADsB,CACjB,GAAEvB,SAAU,IAAGO,IAAI,CAACC,GAAI,EADP,EACUD,IADV,CAAvB;AAEA,SAAOL,QAAQ,CAACG,IAAhB;AACD,CAJM","sourcesContent":["import axios from 'axios';\n\nconst API_URI = process.env.REACT_APP_LOCAL_API_URI || process.env.REACT_APP_REMOTE_API_URI;\nconst POSTS_API = `${API_URI}/posts`;\n\nexport const findAllPosts = async () => {\n  const response = await axios.get(POSTS_API);\n  const posts = response.data;\n  return posts;\n}\n\nexport const findPost = async (post) => {\n  const response = await axios.get(`${POSTS_API}/${post._id}`);\n  return response.data;\n}\n\nexport const findPostsByAuthor = async authorId => {\n    const response = await axios.get(`${POSTS_API}/author/id/${authorId}`);\n    return response.data;\n}\n\nexport const findPostsByAuthorsList = async ids => {\n    const response = await axios.post(`${POSTS_API}/author/list`, {authors: ids});\n    return response.data;\n}\n\nexport const findPostsBySong = async songId => {\n    const response = await axios.get(`${POSTS_API}/song/id/${songId}`);\n    return response.data;\n}\n\nexport const findPostsBySongsList = async ids => {\n    const response = await axios.post(`${POSTS_API}/song/list`, {songs: ids});\n    return response.data;\n}\n\nexport const findPopularSongs = async () => {\n    const response = await axios.get(`${POSTS_API}/song/popular`);\n    return response.data;\n}\n\nexport const createPost = async (post) => {\n  const response = await axios.post(POSTS_API, post)\n  return response.data;\n}\n\nexport const deletePost = async (post) => {\n  const response = await axios.delete(`${POSTS_API}/${post._id}`);\n  return response.data;\n}\n\nexport const updatePost = async (post) => {\n  const response = await axios\n  .put(`${POSTS_API}/${post._id}`, post);\n  return response.data;\n}\n"]},"metadata":{},"sourceType":"module"}