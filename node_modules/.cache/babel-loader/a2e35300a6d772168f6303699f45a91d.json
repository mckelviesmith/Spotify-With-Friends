{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/HomeScreen/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useProfile } from '../../contexts/profileContext';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostList from \"../Posts\";\nimport * as postService from '../../services/post-service';\nimport * as userService from '../../services/user-service';\nimport * as songService from \"../../services/song-service\";\nimport CreatePost from \"../Posts/createPost\";\nimport UserList from \"../user-list\";\nimport SongList from \"../SongList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    checkLoggedIn\n  } = useProfile();\n  const posts = useSelector(state => state.posts);\n  const users = useSelector(state => state.users);\n  const [songs, setSongs] = useState([]);\n  const [loggedInUser, setLoggedInUser] = useState(); // Get profile user and currently logged in user\n\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n        setLoggedInUser(user);\n      } catch (e) {\n        console.log(`Caught error in HomeScreen index.js: ${e}`);\n      }\n    };\n\n    check();\n  }, []);\n  useEffect(() => {\n    const getPosts = async () => {\n      let posts = [];\n\n      if (loggedInUser) {\n        if (loggedInUser.creator) {\n          posts = await postService.findPostsBySongsList(loggedInUser.songs);\n        } else {\n          posts = await postService.findPostsByAuthorsList(loggedInUser.following);\n        }\n      } else {\n        posts = await postService.findAllPosts();\n      }\n\n      dispatch({\n        type: 'FIND_ALL_POSTS',\n        posts: posts\n      });\n    };\n\n    const getNewlyJoinedUsers = async () => {\n      const users = await userService.findAllUsers();\n      dispatch({\n        type: 'FIND_ALL_USERS',\n        users: users\n      });\n    };\n\n    const getPopularSongs = async () => {\n      if (songs.length === 0) {\n        const songIds = await postService.findPopularSongs();\n        const songs = await songService.findSongsById(songIds, true);\n        setSongs(songs);\n      }\n    };\n\n    const getObjectsLists = async () => {\n      await Promise.all([getPosts(), getNewlyJoinedUsers(), getPopularSongs()]);\n    };\n\n    getObjectsLists();\n  }, [loggedInUser]);\n\n  const PostsHeader = () => {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"ms-5\",\n      children: loggedInUser && (loggedInUser.creator && 'What people are saying about your songs' || 'Posts by your following list') || 'What the community is talking about'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: loggedInUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Welcome \", loggedInUser.name.split(' ')[0], \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Check out what the community has to say below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 col-md-5 col-lg-6 pe-0 pe-md-2 pe-xl-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-lg-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: \"Newest members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(UserList, {\n              users: users,\n              className: \"mt-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-lg-7\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0 mt-4 mt-lg-0\",\n              children: \"Popular songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SongList, {\n              songs: songs,\n              ranked: true,\n              className: \"mt-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 mt-lg-0 col-12 col-md-7 col-lg-6 ps-2 ps-xl-5\",\n        children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n          canPost: true,\n          className: \"ms-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostsHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(PostList, {\n          posts: posts,\n          className: \"mt-3 mx-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this) || /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-5\",\n          children: \"Nobody has posted in your community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomeScreen, \"+3kuRMIa6uYEOyedmFYGu2b8B2I=\", false, function () {\n  return [useDispatch, useProfile, useSelector, useSelector];\n});\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/HomeScreen/index.js"],"names":["React","useEffect","useState","useProfile","useDispatch","useSelector","PostList","postService","userService","songService","CreatePost","UserList","SongList","HomeScreen","dispatch","checkLoggedIn","posts","state","users","songs","setSongs","loggedInUser","setLoggedInUser","check","user","e","console","log","getPosts","creator","findPostsBySongsList","findPostsByAuthorsList","following","findAllPosts","type","getNewlyJoinedUsers","findAllUsers","getPopularSongs","length","songIds","findPopularSongs","findSongsById","getObjectsLists","Promise","all","PostsHeader","name","split"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useProfile } from '../../contexts/profileContext';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostList from \"../Posts\";\nimport * as postService from '../../services/post-service';\nimport * as userService from '../../services/user-service';\nimport * as songService from \"../../services/song-service\";\nimport CreatePost from \"../Posts/createPost\";\nimport UserList from \"../user-list\";\nimport SongList from \"../SongList\";\n\nconst HomeScreen = () => {\n    const dispatch = useDispatch();\n    const { checkLoggedIn } = useProfile();\n    const posts = useSelector(state => state.posts);\n    const users = useSelector(state => state.users);\n    const [songs, setSongs] = useState([]);\n    const [loggedInUser, setLoggedInUser] = useState();\n\n    // Get profile user and currently logged in user\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setLoggedInUser(user);\n            } catch (e) {\n                console.log(`Caught error in HomeScreen index.js: ${e}`);\n            }\n        };\n        check();\n    }, []);\n\n    useEffect(() => {\n        const getPosts = async () => {\n            let posts = [];\n\n            if (loggedInUser) {\n                if (loggedInUser.creator) {\n                    posts = await postService.findPostsBySongsList(loggedInUser.songs);\n                } else {\n                    posts = await postService.findPostsByAuthorsList(loggedInUser.following);\n                }\n            } else {\n                posts = await postService.findAllPosts();\n            }\n\n            dispatch({\n                type: 'FIND_ALL_POSTS',\n                posts: posts\n            });\n        };\n        const getNewlyJoinedUsers = async () => {\n            const users = await userService.findAllUsers();\n            dispatch({\n                type: 'FIND_ALL_USERS',\n                users: users\n            });\n        };\n        const getPopularSongs = async () => {\n            if (songs.length === 0) {\n                const songIds = await postService.findPopularSongs();\n                const songs = await songService.findSongsById(songIds, true);\n                setSongs(songs);\n            }\n        };\n\n        const getObjectsLists = async () => {\n            await Promise.all([\n                getPosts(),\n                getNewlyJoinedUsers(),\n                getPopularSongs()\n            ]);\n        };\n        getObjectsLists();\n    }, [loggedInUser]);\n\n    const PostsHeader = () => {\n        return (\n            <h4 className=\"ms-5\">\n                {\n                    (\n                        loggedInUser && (\n                            (\n                                loggedInUser.creator &&\n                                'What people are saying about your songs'\n                            ) ||\n                            'Posts by your following list'\n                        )\n                    ) ||\n                    'What the community is talking about'\n                }\n            </h4>\n        );\n    };\n    \n    return (\n        <div className=\"mt-3\">\n            <div className=\"row mb-4\">\n                {\n                    loggedInUser &&\n                    <>\n                        <h1><strong>Welcome {loggedInUser.name.split(' ')[0]}!</strong></h1>\n                        <h3>Check out what the community has to say below</h3>\n                    </>\n                }\n            </div>\n            <div className=\"row\">\n                <div className=\"col-8 col-md-5 col-lg-6 pe-0 pe-md-2 pe-xl-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-lg-5\">\n                            <h4 className=\"mb-0\">Newest members</h4>\n                            <UserList users={users} className='mt-3' />\n                        </div>\n                        <div className=\"col-12 col-lg-7\">\n                            <h4 className=\"mb-0 mt-4 mt-lg-0\">Popular songs</h4>\n                            <SongList songs={songs} ranked={true} className='mt-3' />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-4 mt-lg-0 col-12 col-md-7 col-lg-6 ps-2 ps-xl-5\">\n                    <CreatePost canPost={true} className='ms-5' />\n                    <PostsHeader />\n                    {\n                        (\n                            posts.length > 0 &&\n                            <PostList posts={posts} className='mt-3 mx-5' />\n                        ) ||\n                        <span className=\"mx-5\">Nobody has posted in your community</span>\n                    }\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}