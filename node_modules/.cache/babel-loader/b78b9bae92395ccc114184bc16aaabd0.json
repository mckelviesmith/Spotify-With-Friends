{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useProfile } from '../contexts/profileContext';\n\nconst SecureContent = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loggedIn, setLoggedIn] = useState(false);\n  const {\n    checkLoggedIn\n  } = useProfile();\n  useEffect(() => {\n    const check = async () => {\n      try {\n        await checkLoggedIn();\n        setLoggedIn(true);\n      } catch (e) {\n        setLoggedIn(false);\n      }\n    };\n\n    check();\n  }, []);\n\n  if (loggedIn) {\n    return children;\n  } else {\n    return null;\n  }\n};\n\n_s(SecureContent, \"JTot6GS1CsKNte39U6rxHzWZmgQ=\", false, function () {\n  return [useProfile];\n});\n\n_c = SecureContent;\nexport default SecureContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecureContent\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/secureContent.js"],"names":["useEffect","useState","useProfile","SecureContent","children","loggedIn","setLoggedIn","checkLoggedIn","check","e"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,4BAA3B;;AAEA,MAAMC,aAAa,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAoBL,UAAU,EAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,KAAK,GAAG,YAAY;AACtB,UAAI;AACA,cAAMD,aAAa,EAAnB;AACAD,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAHD,CAGE,OAAOG,CAAP,EAAU;AACRH,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,KAPD;;AAQAE,IAAAA,KAAK;AACR,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAIH,QAAJ,EAAc;AACV,WAAOD,QAAP;AACH,GAFD,MAEO;AACH,WAAO,IAAP;AACH;AACJ,CArBD;;GAAMD,a;UAEwBD,U;;;KAFxBC,a;AAuBN,eAAeA,aAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport { useProfile } from '../contexts/profileContext';\n\nconst SecureContent = ({children}) => {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const { checkLoggedIn } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                await checkLoggedIn();\n                setLoggedIn(true);\n            } catch (e) {\n                setLoggedIn(false);\n            }\n        }\n        check();\n    }, []);\n\n    if (loggedIn) {\n        return children;\n    } else {\n        return null;\n    }\n};\n\nexport default SecureContent;"]},"metadata":{},"sourceType":"module"}