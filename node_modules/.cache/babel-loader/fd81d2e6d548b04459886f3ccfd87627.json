{"ast":null,"code":"var _jsxFileName = \"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/anonRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport { useProfile } from '../contexts/profileContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnonRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const {\n    checkLoggedIn\n  } = useProfile();\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n        setCurrentUser(user);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n      }\n    };\n\n    check();\n  }, []);\n\n  if (!currentUser) {\n    return children;\n  } else if (loading) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(AnonRoute, \"yVOsu7Sov888tefanfMt7Sf4w6s=\", false, function () {\n  return [useProfile];\n});\n\n_c = AnonRoute;\nexport default AnonRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnonRoute\");","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/anonRoute.js"],"names":["React","useEffect","useState","Navigate","useProfile","AnonRoute","children","currentUser","setCurrentUser","loading","setLoading","checkLoggedIn","check","user","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,4BAA3B;;;AAEA,MAAMC,SAAS,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAoBP,UAAU,EAApC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,KAAK,GAAG,YAAY;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAMF,aAAa,EAAhC;AACAH,QAAAA,cAAc,CAACK,IAAD,CAAd;AACAH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJD,CAIE,OAAOI,CAAP,EAAU;AACRJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KARD;;AASAE,IAAAA,KAAK;AACR,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAI,CAACL,WAAL,EAAkB;AACd,WAAOD,QAAP;AACH,GAFD,MAEO,IAAIG,OAAJ,EAAa;AAChB,WAAO,IAAP;AACH,GAFM,MAEA;AACH,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CAzBD;;GAAMJ,S;UAGwBD,U;;;KAHxBC,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport { useProfile } from '../contexts/profileContext';\n\nconst AnonRoute = ({children}) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n    const { checkLoggedIn } = useProfile();\n    \n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n                setLoading(false);\n            } catch (e) {\n                setLoading(false);\n            }\n        }\n        check();\n    }, []);\n\n    if (!currentUser) {\n        return children;\n    } else if (loading) {\n        return null;\n    } else {\n        return <Navigate to=\"/\"/>;\n    }\n};\n\nexport default AnonRoute;"]},"metadata":{},"sourceType":"module"}