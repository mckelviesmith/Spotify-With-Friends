{"ast":null,"code":"import * as service from '../services/post-service';\nexport const CREATE_POST = 'CREATE_POST';\nexport const FIND_ALL_POSTS = 'FIND_ALL_POSTS';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const FIND_POST_BY_ID = 'FIND_POST_BY_ID';\nexport const FIND_POSTS_BY_SONG = 'FIND_POSTS_BY_SONG';\nexport const FIND_POSTS_BY_AUTHOR = 'FIND_POSTS_BY_AUTHOR';\nexport const findAllPosts = async dispatch => {\n  const posts = await service.findAllPosts();\n  dispatch({\n    type: FIND_ALL_POSTS,\n    posts\n  });\n};\nexport const findPostsBySong = async (dispatch, songId) => {\n  const posts = await service.findPostsBySong(songId);\n  dispatch({\n    type: FIND_POSTS_BY_SONG,\n    posts\n  });\n};\nexport const findPostsByAuthor = async (dispatch, userId) => {\n  const posts = await service.findPostsByAuthor(userId);\n  dispatch({\n    type: FIND_POSTS_BY_AUTHOR,\n    posts\n  });\n};\nexport const findPost = async dispatch => {\n  const post = await service.findPost();\n  dispatch({\n    type: FIND_POST_BY_ID,\n    post\n  });\n};\nexport const deletePost = async (dispatch, post) => {\n  await service.deletePost(post);\n  dispatch({\n    type: DELETE_POST,\n    post\n  });\n};\nexport const createPost = async (dispatch, post) => {\n  const newPost = await service.createPost(post);\n  dispatch({\n    type: CREATE_POST,\n    newPost\n  });\n};\nexport const updatePost = async (dispatch, post) => {\n  await service.updatePost(post);\n  dispatch({\n    type: UPDATE_POST,\n    post\n  });\n};","map":{"version":3,"sources":["/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/post-actions.js"],"names":["service","CREATE_POST","FIND_ALL_POSTS","UPDATE_POST","DELETE_POST","FIND_POST_BY_ID","FIND_POSTS_BY_SONG","FIND_POSTS_BY_AUTHOR","findAllPosts","dispatch","posts","type","findPostsBySong","songId","findPostsByAuthor","userId","findPost","post","deletePost","createPost","newPost","updatePost"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,0BAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAP,IAAoB;AAC9C,QAAMC,KAAK,GAAG,MAAMV,OAAO,CAACQ,YAAR,EAApB;AACAC,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAET,cADC;AAEPQ,IAAAA;AAFO,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAME,eAAe,GAAG,OAAOH,QAAP,EAAiBI,MAAjB,KAA4B;AACvD,QAAMH,KAAK,GAAG,MAAMV,OAAO,CAACY,eAAR,CAAwBC,MAAxB,CAApB;AACAJ,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEL,kBADC;AAEPI,IAAAA;AAFO,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMI,iBAAiB,GAAG,OAAOL,QAAP,EAAiBM,MAAjB,KAA4B;AAC3D,QAAML,KAAK,GAAG,MAAMV,OAAO,CAACc,iBAAR,CAA0BC,MAA1B,CAApB;AACAN,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEJ,oBADC;AAEPG,IAAAA;AAFO,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMM,QAAQ,GAAG,MAAOP,QAAP,IAAoB;AAC1C,QAAMQ,IAAI,GAAG,MAAMjB,OAAO,CAACgB,QAAR,EAAnB;AACAP,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEN,eADC;AAEPY,IAAAA;AAFO,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMC,UAAU,GAAG,OAAOT,QAAP,EAAiBQ,IAAjB,KAA0B;AAClD,QAAMjB,OAAO,CAACkB,UAAR,CAAmBD,IAAnB,CAAN;AACAR,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEP,WADC;AAEPa,IAAAA;AAFO,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAME,UAAU,GAAG,OAAOV,QAAP,EAAiBQ,IAAjB,KAA0B;AAClD,QAAMG,OAAO,GAAG,MAAMpB,OAAO,CAACmB,UAAR,CAAmBF,IAAnB,CAAtB;AACAR,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEV,WADC;AAEPmB,IAAAA;AAFO,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMC,UAAU,GAAG,OAAOZ,QAAP,EAAiBQ,IAAjB,KAA0B;AAClD,QAAMjB,OAAO,CAACqB,UAAR,CAAmBJ,IAAnB,CAAN;AACAR,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAER,WADC;AAEPc,IAAAA;AAFO,GAAD,CAAR;AAID,CANM","sourcesContent":["import * as service from '../services/post-service';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const FIND_ALL_POSTS = 'FIND_ALL_POSTS';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const FIND_POST_BY_ID = 'FIND_POST_BY_ID';\nexport const FIND_POSTS_BY_SONG = 'FIND_POSTS_BY_SONG';\nexport const FIND_POSTS_BY_AUTHOR = 'FIND_POSTS_BY_AUTHOR';\n\nexport const findAllPosts = async (dispatch) => {\n  const posts = await service.findAllPosts();\n  dispatch({\n    type: FIND_ALL_POSTS,\n    posts\n  });\n}\n\nexport const findPostsBySong = async (dispatch, songId) => {\n    const posts = await service.findPostsBySong(songId);\n    dispatch({\n      type: FIND_POSTS_BY_SONG,\n      posts\n    });\n}\n\nexport const findPostsByAuthor = async (dispatch, userId) => {\n  const posts = await service.findPostsByAuthor(userId);\n  dispatch({\n    type: FIND_POSTS_BY_AUTHOR,\n    posts\n  });\n}\n\nexport const findPost = async (dispatch) => {\n  const post = await service.findPost();\n  dispatch({\n    type: FIND_POST_BY_ID,\n    post\n  });\n}\n\nexport const deletePost = async (dispatch, post) => {\n  await service.deletePost(post);\n  dispatch({\n    type: DELETE_POST,\n    post\n  })\n}\n\nexport const createPost = async (dispatch, post) => {\n  const newPost = await service.createPost(post);\n  dispatch({\n    type: CREATE_POST,\n    newPost\n  });\n}\n\nexport const updatePost = async (dispatch, post) => {\n  await service.updatePost(post);\n  dispatch({\n    type: UPDATE_POST,\n    post\n  });\n}\n\n"]},"metadata":{},"sourceType":"module"}