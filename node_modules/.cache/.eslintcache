[{"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/index.js":"1","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/App.js":"2","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reportWebVitals.js":"3","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/anonRoute.js":"4","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/comment-reducer.js":"5","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/post-reducer.js":"6","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/song-reducer.js":"7","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/user-reducer.js":"8","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/secureRoute.js":"9","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Login/log-in.js":"10","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Login/register.js":"11","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/contexts/profileContext.js":"12","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/index.js":"13","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Footer/index.js":"14","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/NavBar/index.js":"15","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Privacy/index.js":"16","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/HomeScreen/index.js":"17","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongDetails/index.js":"18","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/EditProfile/index.js":"19","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/post-actions.js":"20","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/song-actions.js":"21","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/user-actions.js":"22","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/comment-actions.js":"23","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/validName.js":"24","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/refreshPage.js":"25","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Loading.js":"26","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/header.js":"27","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/profileMain.js":"28","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/NavBar/search.js":"29","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/NavBar/secureMenu.js":"30","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/song-service.js":"31","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/toMinutesSeconds.js":"32","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/post-service.js":"33","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/user-service.js":"34","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongDetails/saveSongButton.js":"35","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/createPost.js":"36","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/index.js":"37","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/user-list/index.js":"38","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongList/index.js":"39","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/comment-service.js":"40","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongList/SongListItem.js":"41","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/secureContent.js":"42","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/list-of-post-item.js":"43","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/FollowButton/index.js":"44","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/user-list/user-list-item.js":"45","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/TimeAgoUtil.js":"46","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/Comments/index.js":"47","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/Comments/comment-list-item.js":"48"},{"size":500,"mtime":1651451118000,"results":"49","hashOfConfig":"50"},{"size":3207,"mtime":1651451118000,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1651451118000,"results":"52","hashOfConfig":"50"},{"size":839,"mtime":1651451118000,"results":"53","hashOfConfig":"50"},{"size":704,"mtime":1651451118000,"results":"54","hashOfConfig":"50"},{"size":785,"mtime":1651451118000,"results":"55","hashOfConfig":"50"},{"size":521,"mtime":1651451118000,"results":"56","hashOfConfig":"50"},{"size":1008,"mtime":1651451118000,"results":"57","hashOfConfig":"50"},{"size":847,"mtime":1651451118000,"results":"58","hashOfConfig":"50"},{"size":2111,"mtime":1651451118000,"results":"59","hashOfConfig":"50"},{"size":4461,"mtime":1651451118000,"results":"60","hashOfConfig":"50"},{"size":1782,"mtime":1651451118000,"results":"61","hashOfConfig":"50"},{"size":1692,"mtime":1651451118000,"results":"62","hashOfConfig":"50"},{"size":671,"mtime":1651451118000,"results":"63","hashOfConfig":"50"},{"size":1086,"mtime":1651451118000,"results":"64","hashOfConfig":"50"},{"size":2773,"mtime":1651451118000,"results":"65","hashOfConfig":"50"},{"size":4859,"mtime":1651451118000,"results":"66","hashOfConfig":"50"},{"size":5586,"mtime":1651451118000,"results":"67","hashOfConfig":"50"},{"size":4893,"mtime":1651451118000,"results":"68","hashOfConfig":"50"},{"size":1510,"mtime":1651451118000,"results":"69","hashOfConfig":"50"},{"size":534,"mtime":1651451118000,"results":"70","hashOfConfig":"50"},{"size":1820,"mtime":1651451118000,"results":"71","hashOfConfig":"50"},{"size":1432,"mtime":1651451118000,"results":"72","hashOfConfig":"50"},{"size":173,"mtime":1651451118000,"results":"73","hashOfConfig":"50"},{"size":73,"mtime":1651451118000,"results":"74","hashOfConfig":"50"},{"size":139,"mtime":1651451118000,"results":"75","hashOfConfig":"50"},{"size":2647,"mtime":1651451118000,"results":"76","hashOfConfig":"50"},{"size":5020,"mtime":1651451118000,"results":"77","hashOfConfig":"50"},{"size":2179,"mtime":1651451118000,"results":"78","hashOfConfig":"50"},{"size":2697,"mtime":1651451118000,"results":"79","hashOfConfig":"50"},{"size":1461,"mtime":1651451118000,"results":"80","hashOfConfig":"50"},{"size":216,"mtime":1651451118000,"results":"81","hashOfConfig":"50"},{"size":1611,"mtime":1651451118000,"results":"82","hashOfConfig":"50"},{"size":1425,"mtime":1651451118000,"results":"83","hashOfConfig":"50"},{"size":2726,"mtime":1651451118000,"results":"84","hashOfConfig":"50"},{"size":4925,"mtime":1651451118000,"results":"85","hashOfConfig":"50"},{"size":531,"mtime":1651451118000,"results":"86","hashOfConfig":"50"},{"size":380,"mtime":1651451118000,"results":"87","hashOfConfig":"50"},{"size":924,"mtime":1651451118000,"results":"88","hashOfConfig":"50"},{"size":1106,"mtime":1651451118000,"results":"89","hashOfConfig":"50"},{"size":1674,"mtime":1651451118000,"results":"90","hashOfConfig":"50"},{"size":623,"mtime":1651451118000,"results":"91","hashOfConfig":"50"},{"size":6577,"mtime":1651451118000,"results":"92","hashOfConfig":"50"},{"size":3977,"mtime":1651451118000,"results":"93","hashOfConfig":"50"},{"size":1363,"mtime":1651451118000,"results":"94","hashOfConfig":"50"},{"size":793,"mtime":1651451118000,"results":"95","hashOfConfig":"50"},{"size":641,"mtime":1651451118000,"results":"96","hashOfConfig":"50"},{"size":2394,"mtime":1651451118000,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l94r3p",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/App.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reportWebVitals.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/anonRoute.js",["258"],[],"import React, { useEffect, useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport { useProfile } from '../contexts/profileContext';\n\nconst AnonRoute = ({children}) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n    const { checkLoggedIn } = useProfile();\n    \n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n                setLoading(false);\n            } catch (e) {\n                setLoading(false);\n            }\n        }\n        check();\n    }, []);\n\n    if (!currentUser) {\n        return children;\n    } else if (loading) {\n        return null;\n    } else {\n        return <Navigate to=\"/\"/>;\n    }\n};\n\nexport default AnonRoute;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/comment-reducer.js",["259"],[],"import {\n  FIND_ALL_COMMENTS,\n  DELETE_COMMENT,\n  CREATE_COMMENT,\n  UPDATE_COMMENT,\n  FIND_COMMENTS_IN_IDLIST\n}\n  from \"../actions/comment-actions\";\n\nconst commentsReducer = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_COMMENT:\n      return state.map(\n          comment => comment._id === action.comment._id ?\n              action.comment : comment);\n    case CREATE_COMMENT:\n      return [\n        action.newComment,\n        ...state\n      ];\n    case FIND_ALL_COMMENTS:\n      return action.comments;\n    case DELETE_COMMENT:\n      return state.filter(\n          comment => comment._id !== action.comment._id);\n    default:\n      return state;\n  }\n}\nexport default commentsReducer;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/post-reducer.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/song-reducer.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/reducers/user-reducer.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/secureRoute.js",["260"],[],"import React, { useEffect, useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport { useProfile } from '../contexts/profileContext';\n\nconst SecureRoute = ({children}) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n    const { checkLoggedIn } = useProfile();\n    \n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n                setLoading(false);\n            } catch (e) {\n                setLoading(false);\n            }\n        }\n        check();\n    }, []);\n\n    if (currentUser) {\n        return children;\n    } else if (loading) {\n        return null;\n    } else {\n        return <Navigate to=\"/login\"/>;\n    }\n};\n\nexport default SecureRoute;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Login/log-in.js",["261"],[],"import React, { useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport refreshPage from \"../../utils/refreshPage\";\nimport validName from \"../../utils/validName\";\n\nconst Login = () => {\n    const { login } = useProfile();\n    const usernameRef = useRef();\n    const passwordRef = useRef();\n    const navigate = useNavigate();\n\n    const handleLogin = async e => {\n        e.preventDefault();\n        \n        try {\n            await login(usernameRef.current.value, passwordRef.current.value);\n            navigate(-1);\n            refreshPage();\n        } catch (e) {\n            alert('Unable to login with given user credentials');\n        }\n    };\n\n    return (\n        <div className=\"container mt-3\">\n            <h1 className=\"text-center text-primary mb-5\">Log in</h1>\n            <form onSubmit={handleLogin}>\n                {/* username */}\n                <div className=\"form-outline mb-4\">\n                    <input required\n                            ref={usernameRef}\n                            type=\"text\" id=\"loginName\"\n                            className=\"form-control\"\n                            placeholder=\"johnsmith\"/>\n                    <label className=\"form-label\">Username</label>\n                </div>\n\n                {/* password */}\n                <div className=\"form-outline mb-4\">\n                    <input required\n                        ref={passwordRef}\n                        type=\"password\" id=\"loginPassword\" \n                        className=\"form-control\"\n                        placeholder=\"password\"/>\n                    <label className=\"form-label\">Password</label>\n                </div>\n\n                <button type=\"submit\"\n                        className=\"btn btn-primary btn-block mb-4\">\n                    Login\n                </button>\n\n                <div className=\"text-center\">\n                    <p>Not a member? <Link to=\"/register\">Register</Link></p>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nexport default Login;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Login/register.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/contexts/profileContext.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/index.js",["262"],[],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useProfile } from '../../contexts/profileContext';\nimport Loading from '../Loading';\nimport Header from './header';\nimport ProfileMain from './profileMain';\nimport * as userService from '../../services/user-service';\nimport './style.css';\n\nconst Profile = () => {\n    const { username } = useParams();\n    const { checkLoggedIn } = useProfile();\n    const [isThisUser, setIsThisUser] = useState(false);\n    const [profileUser, setProfileUser] = useState();\n\n    // Get profile user and currently logged in user\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setIsThisUser(user && user.username === username);\n            } catch (e) {\n                console.log(`Caught error in Profile index.js: ${e}`);\n            }\n        };\n        const getProfileUser = async () => {\n            const user = await userService.findUserByUsername(username);\n            setProfileUser(user);\n        };\n        const getUsers = async () => {\n            await Promise.all([\n                check(),\n                getProfileUser()\n            ]);\n        };\n        getUsers();\n    }, [checkLoggedIn]);\n\n    if (profileUser) {\n        return (\n            <div>\n                <Header isThisUser={isThisUser} profileUser={profileUser} />\n                <hr className='border-2 border-top border-secondary' />\n                <ProfileMain isThisUser={isThisUser} profileUser={profileUser} />\n            </div>\n        );\n    } else {\n        return <Loading />;\n    }\n}\n\nexport default Profile;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Footer/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/NavBar/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Privacy/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/HomeScreen/index.js",["263","264"],[],"import React, { useEffect, useState } from \"react\";\nimport { useProfile } from '../../contexts/profileContext';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostList from \"../Posts\";\nimport * as postService from '../../services/post-service';\nimport * as userService from '../../services/user-service';\nimport * as songService from \"../../services/song-service\";\nimport CreatePost from \"../Posts/createPost\";\nimport UserList from \"../user-list\";\nimport SongList from \"../SongList\";\n\nconst HomeScreen = () => {\n    const dispatch = useDispatch();\n    const { checkLoggedIn } = useProfile();\n    const posts = useSelector(state => state.posts);\n    const users = useSelector(state => state.users);\n    const [songs, setSongs] = useState([]);\n    const [loggedInUser, setLoggedInUser] = useState();\n\n    // Get profile user and currently logged in user\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setLoggedInUser(user);\n            } catch (e) {\n                console.log(`Caught error in HomeScreen index.js: ${e}`);\n            }\n        };\n        check();\n    }, []);\n\n    useEffect(() => {\n        const getPosts = async () => {\n            let posts = [];\n\n            if (loggedInUser) {\n                if (loggedInUser.creator) {\n                    posts = await postService.findPostsBySongsList(loggedInUser.songs);\n                } else {\n                    posts = await postService.findPostsByAuthorsList(loggedInUser.following);\n                }\n            } else {\n                posts = await postService.findAllPosts();\n            }\n\n            dispatch({\n                type: 'FIND_ALL_POSTS',\n                posts: posts\n            });\n        };\n        const getNewlyJoinedUsers = async () => {\n            const users = await userService.findAllUsers();\n            dispatch({\n                type: 'FIND_ALL_USERS',\n                users: users\n            });\n        };\n        const getPopularSongs = async () => {\n            if (songs.length === 0) {\n                const songIds = await postService.findPopularSongs();\n                const songs = await songService.findSongsById(songIds, true);\n                setSongs(songs);\n            }\n        };\n\n        const getObjectsLists = async () => {\n            await Promise.all([\n                getPosts(),\n                getNewlyJoinedUsers(),\n                getPopularSongs()\n            ]);\n        };\n        getObjectsLists();\n    }, [loggedInUser]);\n\n    const PostsHeader = () => {\n        return (\n            <h4 className=\"ms-5\">\n                {\n                    (\n                        loggedInUser && (\n                            (\n                                loggedInUser.creator &&\n                                'What people are saying about your songs'\n                            ) ||\n                            'Posts by your following list'\n                        )\n                    ) ||\n                    'What the community is talking about'\n                }\n            </h4>\n        );\n    };\n    \n    return (\n        <div className=\"mt-3\">\n            <div className=\"row mb-4\">\n                {\n                    loggedInUser &&\n                    <>\n                        <h1><strong>Welcome {loggedInUser.name.split(' ')[0]}!</strong></h1>\n                        <h3>Check out what the community has to say below</h3>\n                    </>\n                }\n            </div>\n            <div className=\"row\">\n                <div className=\"col-8 col-md-5 col-lg-6 pe-0 pe-md-2 pe-xl-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-lg-5\">\n                            <h4 className=\"mb-0\">Newest members</h4>\n                            <UserList users={users} className='mt-3' />\n                        </div>\n                        <div className=\"col-12 col-lg-7\">\n                            <h4 className=\"mb-0 mt-4 mt-lg-0\">Popular songs</h4>\n                            <SongList songs={songs} ranked={true} className='mt-3' />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-4 mt-lg-0 col-12 col-md-7 col-lg-6 ps-2 ps-xl-5\">\n                    <CreatePost canPost={true} className='ms-5' />\n                    <PostsHeader />\n                    {\n                        (\n                            posts.length > 0 &&\n                            <PostList posts={posts} className='mt-3 mx-5' />\n                        ) ||\n                        <span className=\"mx-5\">Nobody has posted in your community</span>\n                    }\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HomeScreen;\n","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongDetails/index.js",["265","266"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { findSong } from \"../../services/song-service\";\nimport Loading from \"../Loading\";\nimport SaveSongButton from \"./saveSongButton\";\nimport PostList from \"../Posts\";\nimport CreatePost from \"../Posts/createPost\";\nimport { findPostsBySong } from \"../../actions/post-actions\";\nimport { findUsersSongs } from \"../../actions/song-actions\";\nimport toMinutesSeconds from \"../../utils/toMinutesSeconds\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport './style.css';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst SongDetails = () => {\n    const { songId } = useParams();\n    const dispatch = useDispatch();\n    const usersSongs = useSelector(state => state.songs);\n    const songsPosts = useSelector(state => state.posts);\n    const songSaved = useSelector(state => state.songSaved);\n    const [song, setSong] = useState(null);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const { checkLoggedIn } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                const setLoggedInInfo = async () => {\n                    await Promise.all([\n                        setIsLoggedIn(true),\n                        findUsersSongs(dispatch, user),\n                    ]);\n                };\n                setLoggedInInfo();\n            } catch (e) {\n                console.log(`Error loading SongDetails page: ${e}`);\n            }\n        };\n        const getTrack = async () => {\n            if (!song) {\n                const track = await findSong(songId);\n                setSong(track);\n            }\n        };\n\n        const loadPage = async () => {\n            await Promise.all([\n                check(),\n                getTrack(),\n                findPostsBySong(dispatch, songId)\n            ]);\n        };\n        loadPage();\n    }, [dispatch]);\n\n    if (song && usersSongs) {\n        return (\n            <>\n                <div className=\"row m-0 mt-3\">\n                    <div className=\"col-12 col-md-6 p-0 rounded-top-left\">\n                        <div className=\"row m-0 justify-content-center img-height bg-light-yellow p-3 pe-lg-5 rounded-top-left\">\n                            <img src={song.album.cover} className=\"p-0 rounded h-auto w-auto fit-image shadow\"/>\n                        </div>\n                        <div className=\"bg-light-yellow ps-5 p-3 pt-0 pt-md-3 position-relative d-block d-md-none\">\n                            <h1 className=\"text-primary\">\n                                <strong>{song.name}</strong>\n                                {song.explicit && <span className=\"h4 text-danger fw-bold\"> (explicit)</span>}\n                            </h1>\n                            <h4 className=\"text-muted mb-2\">\n                                by {song.artists.map(a => a.name).join(', ')} ({song.album.released.substring(0,4)})\n                            </h4>\n                            <hr className='border-2 border-top border-dark' />\n                            <h5 className=\"text-muted\">Album: {song.album.name}</h5>\n                            <h5 className=\"text-muted\">Duration: {toMinutesSeconds(song.length_ms)}</h5>\n                            <SaveSongButton songId={songId} className=\"position-absolute end-0 bottom-0 m-3\" />\n                        </div>\n                        <CreatePost className=\"mt-4 me-3 me-lg-5\"\n                                    specificSong={song} canPost={songSaved} /> \n                    </div>\n                    <div className=\"col-12 col-md-6 p-0 overflow-auto\">\n                        <div className=\"img-height bg-light-yellow ps-3 ps-lg-5 rounded-top-right p-3 position-relative d-none d-md-block\">\n                            <h1 className=\"text-primary\">\n                                <strong>{song.name}</strong> \n                                {song.explicit && <span className=\"h4 text-danger fw-bold\"> (explicit)</span>}\n                            </h1>\n                            <h4 className=\"text-muted mb-2\">\n                                by {song.artists.map(a => a.name).join(', ')} ({song.album.released.substring(0,4)})\n                            </h4>\n                            <hr className='border-2 border-top border-dark' />\n                            <h5 className=\"text-muted\">Album: {song.album.name}</h5>\n                            <h5 className=\"text-muted\">Duration: {toMinutesSeconds(song.length_ms)}</h5>\n                            <SaveSongButton songId={songId} className=\"position-absolute end-0 bottom-0 me-3 mb-3\" />\n                        </div>\n                        <div className=\"ms-3 ms-lg-5 mb-1\">\n                            <h4 className=\"my-2 my-md-3\">Latest Discussions</h4>\n                            {\n                                (\n                                    songsPosts.length > 0 &&\n                                    <PostList posts={songsPosts} hideImages={true} />\n                                ) || \n                                (\n                                    (isLoggedIn && `Be the first to post about ${song.name}!`) ||\n                                    `There are no posts about ${song.name}`\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return <Loading />\n    }\n}\n\nexport default SongDetails;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/EditProfile/index.js",["267"],[],"import React, { useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useProfile } from \"../../../contexts/profileContext\";\nimport refreshPage from \"../../../utils/refreshPage\";\nimport validName from \"../../../utils/validName\";\n\nconst EditProfile = ({\n    user = {\n        name: \"\",\n        username: \"\",\n        password: \"\",\n        creator: false,\n        biography: \"\",\n        image: \"\",\n        songs: [],\n        playlists: [],\n        followers: [],\n        following: [],\n    },\n}) => {\n    const { updateCurrentUser, currentUser } = useProfile();\n    const nameRef = useRef();\n    const usernameRef = useRef();\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const biographyRef = useRef();\n    const navigate = useNavigate();\n\n    const handleEdit = async (e) => {\n        e.preventDefault();\n\n        try {\n            validName(nameRef.current.value);\n\n            if (nameRef.current.value && usernameRef.current.value && \n                emailRef.current.value && passwordRef.current.value) {\n                    const user = {\n                        ...currentUser,\n                        name: nameRef.current.value,\n                        username: usernameRef.current.value,\n                        email: emailRef.current.value,\n                        password: passwordRef.current.value,\n                        biography: biographyRef.current.value\n                    };\n                    await updateCurrentUser(user);\n                    \n                    navigate(`/profile/${usernameRef.current.value}`);\n                    refreshPage();\n            }\n        } catch (e) {\n            alert(`Unable to edit profile with given information. Try again ${e}`);\n        }\n    };\n\n    return (\n        <div>\n            <h2 className=\"d-flex justify-content-center mb-3\">Edit Profile</h2>\n            <form className=\"mx-5\" onSubmit={handleEdit}>\n                <div className=\"form-outline mb-4\">\n                    <input required\n                        type=\"text\"\n                        id=\"registerName\"\n                        className=\"form-control\"\n                        placeholder={user.name}\n                        ref={nameRef}\n                    />\n                    <label className=\"form-label\" htmlFor=\"registerName\">\n                        Name\n                    </label>\n                </div>\n                <div className=\"form-outline mb-4\">\n                    <input required\n                        type=\"text\"\n                        id=\"registerUsername\"\n                        className=\"form-control\"\n                        placeholder={user.username}\n                        ref={usernameRef}\n                    />\n                    <label className=\"form-label\" htmlFor=\"registerUsername\">\n                        Username\n                    </label>\n                </div>\n                <div className=\"form-outline mb-4\">\n                    <input required\n                        type=\"email\"\n                        id=\"registerName\"\n                        className=\"form-control\"\n                        placeholder={user.email}\n                        ref={emailRef}\n                    />\n                    <label className=\"form-label\" htmlFor=\"registerName\">\n                        Email\n                    </label>\n                </div>\n                <div className=\"form-outline mb-4\">\n                    <input required\n                        type=\"password\"\n                        id=\"registerPassword\"\n                        placeholder=\"password\"\n                        className=\"form-control\"\n                        ref={passwordRef}\n                    />\n                    <label className=\"form-label\" htmlFor=\"registerPassword\">\n                        Password\n                    </label>\n                </div>\n                <div className=\"form-outline mb-4\">\n                    <textarea rows=\"3\" cols=\"50\" \n                              className=\"form-control\"\n                              ref={biographyRef}\n                              placeholder='Give yourself a new biography'>\n                    </textarea>\n                    <label className=\"form-label\" htmlFor=\"registerBiography\">\n                        Biography\n                    </label>\n                </div>\n                <div className=\"row w-auto float-end me-5\">\n                    <button type=\"submit\"\n                            className=\"col w-auto btn btn-outline-primary me-3\">\n                        Save\n                    </button>\n                    <button className=\"col w-auto btn btn-danger\"\n                            onClick={() => navigate(-1)}>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default EditProfile;\n","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/post-actions.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/song-actions.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/user-actions.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/actions/comment-actions.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/validName.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/refreshPage.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Loading.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/header.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Profile/profileMain.js",["268","269","270"],[],"import React, { useEffect, useState } from \"react\";\nimport UserList from \"../user-list\";\nimport PostList from \"../Posts\";\nimport SongList from \"../SongList\";\nimport CreatePost from \"../Posts/createPost\";\nimport * as userService from '../../services/user-service';\nimport * as songService from '../../services/song-service';\nimport * as postService from '../../services/post-service';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst ProfileMain = ({\n    isThisUser = false,\n    profileUser = {\n        name: \"\",\n        username: \"\",\n        password: \"\",\n        creator: false,\n        biography: \"\",\n        image: \"\",\n        songs: [],\n        playlists: [],\n        followers: [],\n        following: [],\n    }\n}) => {\n    const [followers, setFollowers] = useState([]);\n    const [following, setFollowing] = useState([]);\n    const [usersSongs, setUsersSongs] = useState([]);\n\n    const dispatch = useDispatch();\n    const posts = useSelector(state => state.posts);\n    const findUserPosts = async () => {\n        const posts = await postService.findPostsByAuthor(profileUser._id);\n        dispatch({\n            type: 'FIND_POSTS_BY_AUTHOR',\n            posts: posts\n        });\n    }\n    useEffect(findUserPosts, [dispatch]);\n\n    // Get profile user's followers, following, and song data objects\n    useEffect(() => {\n        if (profileUser) {\n            const findUsersFollowers = async () => {\n                const followers = await userService.findUsersFollowers(profileUser);\n                setFollowers(followers);\n            };\n            const findUsersFollowing = async () => {\n                const following = await userService.findUsersFollowing(profileUser);\n                setFollowing(following);\n            };\n            const findUsersSongs = async () => {\n                if (usersSongs.length === 0 && profileUser.songs.length > 0) {\n                    const songs = await songService.findSongsById(profileUser.songs);\n                    setUsersSongs(songs);\n                }\n            };\n\n            const getUsersObjects = async () => {\n                await Promise.all([\n                    findUsersFollowers(),\n                    findUsersFollowing(),\n                    findUsersSongs(),\n                ]);\n            };\n            getUsersObjects();\n        }\n    }, [dispatch]);\n\n    return (\n        <div className='row'>\n            {/* Left column */}\n            <div className='col-4 col-lg-3 d-none d-md-block'>\n                <h5 className='p-0'>Followers</h5>\n                {(followers.length > 0 && <UserList users={followers} className='' />) ||\n                        <p>\n                            {\n                                (isThisUser && 'You have ') ||\n                                `${profileUser.username} has `\n                            }\n                            no followers\n                        </p>\n                }\n                <h5 className='p-0 mt-3'>Following</h5>\n                {(following.length > 0 && <UserList users={following} className='' />) ||\n                    (isThisUser && <p>Add people to follow!</p>) ||\n                    <p>{profileUser.username} is not following anyone</p>}\n            </div>\n\n            {/* Middle column */}\n            <div className='col-12 col-md-8 col-lg-6 px-3 px-xl-5'>\n                {isThisUser && <CreatePost canPost={true}/>}\n                {(posts.length > 0 &&\n                    <div className=\"mx-3 mx-xl-5\">\n                        <h5 className=\"text-center\">\n                            {(isThisUser && 'Your') || `${profileUser.name}'s`} posts\n                        </h5>\n                        <PostList posts={posts} />\n                    </div>) ||\n                    <p>\n                        {\n                            (isThisUser && 'You have ') ||\n                            `${profileUser.username} has `\n                        }\n                        no posts to display\n                        {\n                            isThisUser && '. Create one now and share your songs with everyone!'\n                        }\n                    </p>\n                }\n            </div>\n\n            {/* Right column */}\n            <div className='col-3 d-none d-lg-block'>\n                <h5 className='p-0'>\n                    {\n                        (!isThisUser && `${profileUser.name}'s `) ||\n                        (profileUser.creator && 'Your ') || \n                        'Saved '\n                    }\n                    Songs\n                </h5>\n                {\n                    <SongList songs={usersSongs} /> ||\n                    <p>\n                        {\n                            (isThisUser && 'You have ') ||\n                            `${profileUser.username} has `\n                        }\n                        no {!profileUser.creator && 'saved'} songs\n                    </p>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileMain;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/NavBar/search.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/NavBar/secureMenu.js",["271"],[],"import React, {useEffect, useState} from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useProfile } from '../../contexts/profileContext';\nimport refreshPage from '../../utils/refreshPage';\n\nconst SecureMenu = () => {\n    const [currentUser, setCurrentUser] = useState();\n    const [waiting, setWaiting] = useState(true);\n    const { checkLoggedIn, logout } = useProfile();\n    const navigate = useNavigate();\n    \n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n                setWaiting(false);\n            } catch (e) {\n                setWaiting(false);\n            }\n        }\n        check();\n    }, []);\n\n    const handleLogout = async () => {\n        try {\n            await logout();\n            navigate('/login');\n            refreshPage();\n        } catch (e) {\n            alert('Unable to logout');\n        }\n    };\n\n    return (\n        <>\n            <button className='nav-link active btn btn-info p-1 px-2 mt-lg-0 mt-2' id='navbarDropdown' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>\n                <span className='text-white-50'>\n                    {(currentUser && currentUser.username) ||\n                     (!currentUser && 'Join us')}\n                </span>\n            </button>\n            <ul className='dropdown-menu dropdown-menu-end'\n                style={{minWidth: '1rem'}} \n                aria-labelledby='navbarDropdown'>\n                {\n                    (currentUser &&\n                        <>\n                            <Link to={`/profile/${currentUser.username}`} className='dropdown-item'>\n                                Profile\n                            </Link>\n                            <hr className=\"dropdown-divider\"></hr>\n                            <div className='dropdown-item' \n                                onClick={handleLogout}\n                                type='button'>\n                                Logout\n                            </div>\n                        </>\n                    ) ||\n                    (waiting && <></>) ||\n                    (!currentUser && !waiting &&\n                        <>\n                            <Link to='/register' className='dropdown-item'>\n                                Register\n                            </Link>\n                            <Link to='/login' className='dropdown-item'>\n                                Login\n                            </Link>\n                        </>\n                    )\n                }\n            </ul>\n        </>\n    );\n};\n\nexport default SecureMenu;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/song-service.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/toMinutesSeconds.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/post-service.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/user-service.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongDetails/saveSongButton.js",["272","273"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport { saveSong, unsaveSong } from \"../../actions/song-actions\";\n\nconst SaveSongButton = ({songId = '', className=''}) => {\n    const dispatch = useDispatch();\n    const songSaved = useSelector(state => state.songSaved);\n    const btnStyle = `w-auto btn btn-info ${className}`;\n    const [currentUser, setCurrentUser] = useState();\n    const { checkLoggedIn, updateCurrentUser } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n            } catch (e) {\n                console.log(`Unable to run checkLoggedIn in FollowButton index.js: ${e}`);\n            }\n        }\n        check();\n    }, []);\n\n    useEffect(() => {\n        // Update initial state of saved song reducer value\n        if (currentUser) {\n            if (currentUser.songs.includes(songId)) {\n                saveSong(dispatch);\n            } else {\n                unsaveSong(dispatch);\n            }\n        }\n    }, [currentUser]);\n\n    const handleClick = () => {\n        if (songSaved) {\n            remove();\n        } else {\n            save();\n        }\n    };\n\n    const save = async () => {\n        try {\n            currentUser.songs.push(songId);\n            const perform = async () => {\n                await Promise.all([\n                    updateCurrentUser(currentUser),\n                    saveSong(dispatch)\n                ]);\n            };\n            perform();\n        } catch (e) {\n            console.log(`In saveSongButton.js, unable to perform save functionality: ${e}`);\n        }\n    };\n\n    const remove = () => {\n        try {\n            const updatedUser = {\n                ...currentUser,\n                songs: currentUser.songs.filter(id => id !== songId)\n            };\n            const perform = async () => {\n                await Promise.all([\n                    updateCurrentUser(updatedUser),\n                    unsaveSong(dispatch),\n                    setCurrentUser(updatedUser)\n                ]);\n            };\n            perform();\n        } catch (e) {\n            console.log(`In saveSongButton.js, unable to perform unsave functionality: ${e}`);\n        }\n    };\n\n    if (currentUser) {\n        return (\n            <button className={btnStyle} onClick={handleClick}>\n                <i className={`fa${(songSaved && 's') || 'r'} fa-heart pe-1`}></i>\n                {(songSaved && 'Unsave') || 'Save'}\n            </button>\n        );\n    }\n\n    return null;\n};\n\nexport default SaveSongButton;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/createPost.js",["274","275"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport SecureContent from \"../secureContent\";\nimport { createPost } from \"../../actions/post-actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useProfile } from \"../../contexts/profileContext\";\nimport { findUsersSongs } from '../../actions/song-actions';\n\nconst CreatePost = ({className = '',\n                     specificSong = undefined,\n                     canPost = false,\n}) => {\n    const dispatch = useDispatch();\n    const usersSongs = useSelector(state => state.songs);\n    const { checkLoggedIn } = useProfile();\n    const [currentUser, setCurrentUser] = useState();\n    const titleRef = useRef();\n    const textRef = useRef();\n    const songRef = useRef();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n            } catch (e) {\n                console.log(`Error loading in createPost.js: ${e}`);\n            }\n        };\n        check();\n    }, []);\n\n    useEffect(() => {\n        if (currentUser) {\n            const getSongs = async () => await findUsersSongs(dispatch, currentUser);\n            getSongs();\n        }\n    }, [currentUser]);\n\n    const handleCreate = async e => {\n        e.preventDefault();\n\n        try {\n            if (canPost) {\n                const post = {\n                    title: titleRef.current.value,\n                    author: currentUser._id,\n                    song: specificSong ? specificSong.id : songRef.current.value,\n                    text: textRef.current.value,\n                };\n                await createPost(dispatch, post);\n                \n                titleRef.current.value = \"\";\n                textRef.current.value = \"\";\n    \n                if (songRef.current) {\n                    songRef.current.value = \"\";\n                }\n            } else if (specificSong) {\n                alert(`You must save ${specificSong.name} before posting about it`);\n            }\n        } catch (e) {\n            alert(`Unable to create post. Try again`);\n        }\n    };\n\n    if (currentUser) {\n        return (\n            <SecureContent>\n                <div className={`bg-light p-2 rounded-1 pb-5 mb-4 ${className}`}>\n                    <h5 className=\"mb-2\">Create a Post</h5>\n                    <form onSubmit={handleCreate}>    \n                        {/* title */}\n                        <div className=\"form-outline mb-2\">\n                            <input required \n                                    ref={titleRef}\n                                    type=\"text\" id=\"registerName\" \n                                    className=\"form-control rounded-1\"\n                                    placeholder=\"Title\" />\n                        </div>\n                        \n                        {/* song */}\n                        {\n                            !specificSong && \n                            <div className=\"form-outline mb-4\">\n                                <select required\n                                        ref={songRef}\n                                        className=\"form-select\"\n                                        defaultValue={'DEFAULT'}>\n                                    {\n                                        (\n                                            usersSongs && usersSongs.length > 0 &&\n                                            <option value='DEFAULT' disabled>Select a song to post about</option>\n                                        ) ||\n                                        <option value='DEFAULT' disabled className=\"text-wrap\">\n                                            You have no {currentUser.creator && 'saved'} songs to share\n                                        </option>\n                                    }\n                                    {\n                                        usersSongs &&\n                                        usersSongs.map(s => <option key={s.id} value={s.id}>{s.name} by {s.artists[0].name}</option>)\n                                    }\n                                </select>\n                            </div>\n                        }\n    \n                        {/* text */}\n                        <div className=\"form-outline mb-2\">\n                            <textarea className=\"form-control rounded-1\" \n                                        ref={textRef} \n                                        placeholder=\"Text (optional)\">\n                            </textarea>\n                        </div>\n    \n                        <button className=\"btn btn-primary mb-2 float-end\">\n                            Post\n                        </button>\n                    </form>\n                </div>\n            </SecureContent>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default CreatePost;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/user-list/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongList/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/services/comment-service.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/SongList/SongListItem.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/secureContent.js",["276"],[],"import {useEffect, useState} from 'react';\nimport { useProfile } from '../contexts/profileContext';\n\nconst SecureContent = ({children}) => {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const { checkLoggedIn } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                await checkLoggedIn();\n                setLoggedIn(true);\n            } catch (e) {\n                setLoggedIn(false);\n            }\n        }\n        check();\n    }, []);\n\n    if (loggedIn) {\n        return children;\n    } else {\n        return null;\n    }\n};\n\nexport default SecureContent;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/list-of-post-item.js",["277","278"],[],"import {useDispatch} from \"react-redux\";\nimport {deletePost, updatePost} from \"../../actions/post-actions\";\nimport React, {useEffect, useState} from \"react\";\nimport {createComment} from \"../../actions/comment-actions\";\nimport {useProfile} from \"../../contexts/profileContext\";\nimport CommentList from \"./Comments\";\nimport * as commentService from \"../../services/comment-service\";\nimport {findSong} from \"../../services/song-service\";\nimport * as userService from \"../../services/user-service\";\nimport timeAgo from \"../../utils/TimeAgoUtil\";\nimport refreshPage from \"../../utils/refreshPage\";\n\nconst PostListItem = ({\n  post = null,\n  hideImage = false,\n}) => {\n  const dispatch = useDispatch();\n  const [newComment, setNewComment] = useState();\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [numComments, setNumComments] = useState(0);\n  const [song, setSong] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState();\n  const [author, setAuthor] = useState(null);\n  const {checkLoggedIn} = useProfile();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const comment = {\n    author: currentUserId,\n    timestamp: 0,\n    text: newComment,\n  };\n\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const user = await checkLoggedIn();\n        if (user) {\n          setIsLoggedIn(true);\n          setCurrentUserId(user._id);\n        }\n      } catch (e) {\n        console.log(`Caught error in user-list-item.js: ${e}`);\n      }\n    };\n    const getAuthor = async () => {\n        if (post) {\n            const author = await userService.findUserById(post.author);\n            setAuthor(author);\n        }\n    }\n    const findPostsComments = async () => {\n        if (post) {\n            const comments = await commentService.findCommentsInIdList(post.comments);\n            setComments(comments);\n            setNumComments(comments.length);\n        }\n    }\n    const getTrack = async () => {\n        if (post && !song) {\n            const track = await findSong(post.song);\n            setSong(track);\n        }\n    };\n    \n    const getPostDataObj = async () => {\n        await Promise.all([\n            check(),\n            getAuthor(),\n            findPostsComments(),\n            getTrack()\n        ]);\n    }\n    getPostDataObj();\n  }, [dispatch]);\n\n  const alertLoginForAction = action => alert(`Please log in or create an account to ${action}!`);\n\n  const handleAddNewCommentOrAlertAnon = async () => {\n    if (isLoggedIn) {\n      const commentToAdd = await createComment(dispatch, comment);\n      await updatePost(dispatch, {\n        ...post,\n        post: post.comments.push(commentToAdd._id),\n      });\n      alert('Adding your comment...');\n      refreshPage();\n    } else {\n        alertLoginForAction('comment');\n    }\n  };\n\n  const toggleDisplayComments = () => {\n    setShowComments(!showComments);\n  }\n\n  if (post && song && author) {\n    return (\n        <ul className={`list-group-item bg-secondary mb-2`}>\n          <div className=\"card m-3\">\n            {\n                !hideImage && \n                <a href={`/songs/details/${song.id}`}\n                    className='text-decoration-none text-muted'>\n                    <img src={song.album.cover} className=\"card-img-top\"/>\n                </a>\n            }\n            <div className=\"card-body\">\n              {\n                !hideImage &&\n                <a href={`/songs/details/${song.id}`}\n                    className='text-decoration-none text-muted'>\n                  <p className=\"card-title mb-0 lead\">{song.name}</p>\n                  <p className=\"card-subtitle mb-0 lead\">{song.artists[0].name}</p>\n                  <hr/>\n                </a>\n              }\n              <h4>{post.title}</h4>\n              <p className=\"card-text fw-bold\">\n                <a href={`/profile/${author.username}`}\n                    className='text-decoration-none text-dark'>\n                    {author.name}\n                </a>\n                <span><p className=\"d-inline fw-normal ps-2\">{timeAgo(\n                    post.timestamp)}</p></span></p>\n              <p className=\"card-text\">{post.text}</p>\n            </div>\n            <div>\n              <p className=\"ps-3 pe-3 d-inline-block\">\n                {post.likes.includes(currentUserId) && <span role=\"button\"><i\n                    className=\"fas fa-heart text-secondary pe-1\"\n                    onClick={() => {\n                      isLoggedIn && updatePost(dispatch, {\n                        ...post,\n                        post: post.likes.splice(post.likes.indexOf(currentUserId), 1),\n                      })\n                    }}></i>\n                  </span>}\n                {!post.likes.includes(currentUserId) && <span role=\"button\"><i\n                    className=\"far fa-heart pe-1\"\n                    onClick={() => {\n                      (isLoggedIn && !post.likes.includes(currentUserId) &&\n                      updatePost(dispatch, {\n                        ...post,\n                        post: post.likes.push(currentUserId),\n                      })) || (!isLoggedIn && alertLoginForAction('like posts'))}}></i>\n                  </span>}\n                {post.likes.length} </p>\n              <p className=\"pe-3 d-inline-block\"><span role=\"button\"><i\n                  className={`fa${(showComments && 's') || 'r'} fa-comment`} onClick={() => toggleDisplayComments()}></i></span> {numComments}\n              </p>\n            </div>\n            <div className=\"ms-3 me-3\">\n              <textarea className=\"form-control\" value={newComment}\n                        placeholder=\"Cool post!\"\n                        onChange={(event) =>\n                            setNewComment(event.target.value)}>\n              </textarea>\n              <button\n                  className=\"float-end btn btn-primary mt-2 mb-2 float-end\"\n                  onClick={() =>\n                      handleAddNewCommentOrAlertAnon()}>\n                Comment\n              </button>\n            </div>\n            {showComments && <div className=\"mt-0 pe-3 ps-3 mb-3\">\n              <CommentList comments={comments}/>\n            </div>}\n          </div>\n          {isLoggedIn && post.author=== currentUserId && <div className=\"float-end\">\n            <i onClick={() => deletePost(\n                dispatch, post)}\n                role=\"button\"\n               className=\"pt-3 fa fa-trash text-light fa-2x\"/>\n          </div>}\n        </ul>\n    );\n  } else {\n    return null;\n  }\n}\nexport default PostListItem;\n","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/FollowButton/index.js",["279","280"],[],"import React, { useEffect, useState } from \"react\";\nimport * as service from \"../../services/user-service\";\nimport { useProfile } from \"../../contexts/profileContext\";\n\nconst FollowButton = ({user = {\n    _id: '0',\n    name: 'bill',\n    username: 'bill-webdev',\n    password: 'p@ssword',\n    creator: false,\n    biography: 'hello',\n    image: '',\n    songs: [],\n    playlists: [],\n    followers: [],\n    following: [],\n}, className=''}) => {\n    const [followingUser, setFollowingUser] = useState(false);\n    const btnStyle = `w-auto btn btn-secondary ${className}`;\n    const [otherUser, setOtherUser] = useState(user);\n    const [currentUser, setCurrentUser] = useState();\n    const { checkLoggedIn, updateCurrentUser } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n            try {\n                const user = await checkLoggedIn();\n                setCurrentUser(user);\n            } catch (e) {\n                console.log(`Unable to run checkLoggedIn in FollowButton index.js: ${e}`);\n            }\n        }\n        check();\n    }, []);\n\n    useEffect(() => {\n        // Update initial state of follow user reducer value\n        if (currentUser) {\n            setFollowingUser(currentUser.following.includes(otherUser._id));\n        }\n    }, [currentUser]);\n\n    const handleClick = () => {\n        if (followingUser) {\n            unfollow();\n        } else {\n            follow();\n        }\n    };\n\n    const follow = async () => {\n        try {\n            const updateLoggedInUser = async () => {\n                currentUser.following.push(otherUser._id);\n                // Below is to trigger the useEffect for currentUser\n                const updatedUser = {\n                    ...currentUser,\n                    following: currentUser.following\n                }\n                await updateCurrentUser(updatedUser);\n                setCurrentUser(updatedUser);\n            };\n            const updateOtherUser = async () => {\n                otherUser.followers.push(currentUser._id);\n                await service.updateUser(otherUser);\n                setOtherUser(otherUser);\n            };\n            const perform = async () => {\n                await Promise.all([\n                    updateLoggedInUser(),\n                    updateOtherUser(),\n                    setFollowingUser(true)\n                ]);\n            };\n            perform();\n        } catch (e) {\n            console.log(`In FollowButton index.js, unable to perform follow functionality: ${e}`);\n        }\n    };\n\n    const unfollow = () => {\n        try {\n            const updateLoggedInUser = async () => {\n                const updatedUser = {\n                    ...currentUser,\n                    following: currentUser.following.filter(id => id !== otherUser._id)\n                };\n                const updated = await updateCurrentUser(updatedUser);\n                setCurrentUser(updated);\n            };\n            const updateOtherUser = async () => {\n                const updatedUser = { \n                    ...otherUser,\n                    followers: otherUser.followers.filter(id => id !== currentUser._id)\n                };\n                await service.updateUser(updatedUser);\n                setOtherUser(otherUser);\n            };\n            const perform = async () => {\n                await Promise.all([\n                    updateLoggedInUser(),\n                    updateOtherUser(),\n                    setFollowingUser(false)\n                ]);\n            };\n            perform();\n        } catch (e) {\n            console.log(`In FollowButton index.js, unable to perform follow functionality: ${e}`);\n        }\n    };\n\n    if (currentUser && currentUser._id !== otherUser._id) {\n        return (\n            <button className={btnStyle} onClick={handleClick}>\n                {(followingUser && 'Unfollow') || 'Follow'}\n            </button>\n        );\n    }\n\n    return null;\n};\n\nexport default FollowButton;","/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/user-list/user-list-item.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/utils/TimeAgoUtil.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/Comments/index.js",[],[],"/Users/mckelvie/Desktop/spotify-w-friends/cs4550-project-main 2/src/components/Posts/Comments/comment-list-item.js",["281","282","283"],[],"import React, {useEffect, useState} from \"react\";\nimport * as userService from \"../../../services/user-service\";\nimport { deleteComment } from \"../../../actions/comment-actions\";\nimport timeAgo from \"../../../utils/TimeAgoUtil\";\nimport { useDispatch } from \"react-redux\";\nimport { useProfile } from \"../../../contexts/profileContext\";\nimport refreshPage from \"../../../utils/refreshPage\";\n\nconst ListOfCommentsItem = ({\n  comment = {\n    _id: '00',\n    author: \"bill\",\n    timestamp: 1650033618075,\n    text: \"comment\",\n  }\n}) => {\n    const dispatch = useDispatch();\n    const [author, setAuthor] = useState(null);\n    const [currentUserId, setCurrentUserId] = useState();\n    const { checkLoggedIn } = useProfile();\n\n    useEffect(() => {\n        const check = async () => {\n          try {\n            const user = await checkLoggedIn();\n            if (user) {\n              setCurrentUserId(user._id);\n            }\n          } catch (e) {\n            console.log(`Caught error in user-list-item.js: ${e}`);\n          }\n        };\n        check();\n    }, []);\n\n    const getAuthor = async () => {\n        const author = await userService.findUserById(comment.author);\n        setAuthor(author);\n    }\n    useEffect(getAuthor, []);\n\n    const deleteItem = async () => {\n        deleteComment(dispatch, comment);\n        alert('Removing your comment...');\n        refreshPage();\n    };\n\n    if (author) {\n        return (\n            <ul className=\"list-group-item w-100\">\n                <div className=\"d-inline-block w-100\">\n                    <div className=\"d-flex align-items-center w-100 justify-content-between\">\n                        <p className=\"fw-bold pe-3 mb-0\">\n                            {author.name}\n                            <span className=\"d-inline fw-normal ps-2\">{timeAgo(comment.timestamp)}</span>\n                        </p>\n                        {\n                            currentUserId && comment.author === currentUserId &&\n                            <i className=\"fa fa-remove text-warning\"\n                                role=\"button\"\n                                onClick={deleteItem}>\n                            </i>\n                        }\n                    </div>\n                    <p className=\"mt-2\">{comment.text}</p>\n                </div>\n            </ul>\n        );\n    }\n\n    return null;\n}\n\nexport default ListOfCommentsItem;",{"ruleId":"284","severity":1,"message":"285","line":21,"column":8,"nodeType":"286","endLine":21,"endColumn":10,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":6,"column":3,"nodeType":"290","messageId":"291","endLine":6,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":21,"column":8,"nodeType":"286","endLine":21,"endColumn":10,"suggestions":"292"},{"ruleId":"288","severity":1,"message":"293","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":17},{"ruleId":"284","severity":1,"message":"294","line":37,"column":8,"nodeType":"286","endLine":37,"endColumn":23,"suggestions":"295"},{"ruleId":"284","severity":1,"message":"285","line":31,"column":8,"nodeType":"286","endLine":31,"endColumn":10,"suggestions":"296"},{"ruleId":"284","severity":1,"message":"297","line":75,"column":8,"nodeType":"286","endLine":75,"endColumn":22,"suggestions":"298"},{"ruleId":"284","severity":1,"message":"299","line":55,"column":8,"nodeType":"286","endLine":55,"endColumn":18,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":63,"column":29,"nodeType":"303","endLine":63,"endColumn":113},{"ruleId":"288","severity":1,"message":"304","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"305","line":32,"column":27,"nodeType":"306","endLine":38,"endColumn":6},{"ruleId":"284","severity":1,"message":"307","line":39,"column":30,"nodeType":"286","endLine":39,"endColumn":40,"suggestions":"308"},{"ruleId":"284","severity":1,"message":"309","line":68,"column":8,"nodeType":"286","endLine":68,"endColumn":18,"suggestions":"310"},{"ruleId":"284","severity":1,"message":"285","line":23,"column":8,"nodeType":"286","endLine":23,"endColumn":10,"suggestions":"311"},{"ruleId":"284","severity":1,"message":"285","line":23,"column":8,"nodeType":"286","endLine":23,"endColumn":10,"suggestions":"312"},{"ruleId":"284","severity":1,"message":"313","line":34,"column":8,"nodeType":"286","endLine":34,"endColumn":21,"suggestions":"314"},{"ruleId":"284","severity":1,"message":"285","line":30,"column":8,"nodeType":"286","endLine":30,"endColumn":10,"suggestions":"315"},{"ruleId":"284","severity":1,"message":"316","line":37,"column":8,"nodeType":"286","endLine":37,"endColumn":21,"suggestions":"317"},{"ruleId":"284","severity":1,"message":"285","line":18,"column":8,"nodeType":"286","endLine":18,"endColumn":10,"suggestions":"318"},{"ruleId":"284","severity":1,"message":"319","line":74,"column":6,"nodeType":"286","endLine":74,"endColumn":16,"suggestions":"320"},{"ruleId":"301","severity":1,"message":"302","line":104,"column":21,"nodeType":"303","endLine":104,"endColumn":75},{"ruleId":"284","severity":1,"message":"285","line":34,"column":8,"nodeType":"286","endLine":34,"endColumn":10,"suggestions":"321"},{"ruleId":"284","severity":1,"message":"322","line":41,"column":8,"nodeType":"286","endLine":41,"endColumn":21,"suggestions":"323"},{"ruleId":"284","severity":1,"message":"285","line":34,"column":8,"nodeType":"286","endLine":34,"endColumn":10,"suggestions":"324"},{"ruleId":"284","severity":1,"message":"305","line":36,"column":23,"nodeType":"306","endLine":39,"endColumn":6},{"ruleId":"284","severity":1,"message":"325","line":40,"column":26,"nodeType":"286","endLine":40,"endColumn":28,"suggestions":"326"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["327"],"no-unused-vars","'FIND_COMMENTS_IN_IDLIST' is defined but never used.","Identifier","unusedVar",["328"],"'validName' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["329"],["330"],"React Hook useEffect has missing dependencies: 'dispatch' and 'songs.length'. Either include them or remove the dependency array.",["331"],"React Hook useEffect has missing dependencies: 'checkLoggedIn', 'song', and 'songId'. Either include them or remove the dependency array.",["332"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'profileUser._id'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'profileUser' and 'usersSongs.length'. Either include them or remove the dependency array.",["334"],["335"],["336"],"React Hook useEffect has missing dependencies: 'dispatch' and 'songId'. Either include them or remove the dependency array.",["337"],["338"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["339"],["340"],"React Hook useEffect has missing dependencies: 'checkLoggedIn', 'post', and 'song'. Either include them or remove the dependency array.",["341"],["342"],"React Hook useEffect has a missing dependency: 'otherUser._id'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFollowingUser' needs the current value of 'otherUser._id'.",["343"],["344"],"React Hook useEffect has a missing dependency: 'comment.author'. Either include it or remove the dependency array.",["345"],{"desc":"346","fix":"347"},{"desc":"346","fix":"348"},{"desc":"349","fix":"350"},{"desc":"346","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"346","fix":"360"},{"desc":"346","fix":"361"},{"desc":"362","fix":"363"},{"desc":"346","fix":"364"},{"desc":"365","fix":"366"},{"desc":"346","fix":"367"},{"desc":"368","fix":"369"},{"desc":"346","fix":"370"},{"desc":"371","fix":"372"},{"desc":"346","fix":"373"},{"desc":"374","fix":"375"},"Update the dependencies array to be: [checkLoggedIn]",{"range":"376","text":"377"},{"range":"378","text":"377"},"Update the dependencies array to be: [checkLoggedIn, username]",{"range":"379","text":"380"},{"range":"381","text":"377"},"Update the dependencies array to be: [dispatch, loggedInUser, songs.length]",{"range":"382","text":"383"},"Update the dependencies array to be: [checkLoggedIn, dispatch, song, songId]",{"range":"384","text":"385"},"Update the dependencies array to be: [dispatch, profileUser._id]",{"range":"386","text":"387"},"Update the dependencies array to be: [dispatch, profileUser, usersSongs.length]",{"range":"388","text":"389"},{"range":"390","text":"377"},{"range":"391","text":"377"},"Update the dependencies array to be: [currentUser, dispatch, songId]",{"range":"392","text":"393"},{"range":"394","text":"377"},"Update the dependencies array to be: [currentUser, dispatch]",{"range":"395","text":"396"},{"range":"397","text":"377"},"Update the dependencies array to be: [checkLoggedIn, dispatch, post, song]",{"range":"398","text":"399"},{"range":"400","text":"377"},"Update the dependencies array to be: [currentUser, otherUser._id]",{"range":"401","text":"402"},{"range":"403","text":"377"},"Update the dependencies array to be: [comment.author]",{"range":"404","text":"405"},[654,656],"[checkLoggedIn]",[656,658],[1281,1296],"[checkLoggedIn, username]",[1184,1186],[2554,2568],"[dispatch, loggedInUser, songs.length]",[1985,1995],"[checkLoggedIn, dispatch, song, songId]",[1233,1243],"[dispatch, profileUser._id]",[2335,2345],"[dispatch, profileUser, usersSongs.length]",[750,752],[897,899],[1192,1205],"[currentUser, dispatch, songId]",[1065,1067],[1247,1260],"[currentUser, dispatch]",[499,501],[2349,2359],"[checkLoggedIn, dispatch, post, song]",[1070,1072],[1280,1293],"[currentUser, otherUser._id]",[1060,1062],[1231,1233],"[comment.author]"]